# paup-morphy
pmqu <- qu4[1:100, 101:200]
pmqu <- as.matrix(pmqu)
pmqu <- as.vector(pmqu)
pmququartiles <- quantile(pmqu)
# paup-anagallis
paqu <- qu4[1:100, 201:210]
paqu <- as.matrix(paqu)
paqu <- as.vector(paqu)
paququartiles <- quantile(paqu)
# morphy-anagallis
maqu <- qu4[101:200, 201:210]
maqu <- as.matrix(maqu)
maqu <- as.vector(maqu)
maququartiles <- quantile(maqu)
# median and quartiles
qulist <- list(pmqu, paqu, maqu)
ququartiles <- as.data.frame(sapply(qulist, quantile, na.rm = T))
colnames(ququartiles) <- c("PAUP* vs Morphy", "PAUP* vs Anagallis", "Morphy vs Anagallis")
qumedian <- ququartiles[3,]
quLQ <- ququartiles[2,]
quUQ <- ququartiles[4,]
### normalise
random.Q.quantile <- function(number.tips, number.trees, difference.function) {
trees1 <- rmtree(number.trees, number.tips, br = NULL, rooted = F)
trees2 <- rmtree(number.trees, number.tips, br = NULL, rooted = F)
result <- mapply(difference.function, trees1, trees2, SIMPLIFY = F)
result <- bind_rows(result)
result <- sapply(result, quantile)
return(result)
}
set.seed(12345)
randoQquantile <- random.Q.quantile(Ntip(paup), 100, QuartetPoints)
randoQquantile <- randoQquantile[,2]
randoQmedian <- randoQquantile[3]
randoQLQ <- randoQquantile[2]
randoQUQ <- randoQquantile[4]
normalisedQmedian <- qumedian/randoQmedian
normalisedQLQ <- quLQ/randoQLQ
normalisedQUQ <- quUQ/randoQUQ
# morphy-morphy
mmrf <- rf[101:200, 101:200]
mmrf <- as.matrix(mmrf)
mmrf <- as.vector(mmrf)
mmrfquartiles <- quantile(mmrf)
mmrfmedian <- mmrfquartiles[3]
# ana-ana
aarf <- rf[201:210, 201:210]
aarf <- as.matrix(aarf)
aarf <- as.vector(aarf)
aarfquartiles <- quantile(aarf)
aarfmedian <- aarfquartiles[3]
# morphy-morphy
mmqu <- qu4[101:200, 101:200]
mmqu <- as.matrix(mmqu)
mmqu <- as.vector(mmqu)
mmququartiles <- quantile(mmqu)
mmqumedian <- mmququartiles[3]
# ana-ana
aaqu <- qu4[201:210, 201:210]
aaqu <- as.matrix(aaqu)
aaqu <- as.vector(aaqu)
aaququartiles <- quantile(aaqu)
aaqumedian <- aaququartiles[3]
shapiro.test(aaqu)
shapiro.test(aarf)
### RF
# paup-morphy
wilcox.test(pprf, mmrf) # t = -127.97, df = 14153, p-value < 2.2e-16
### RF
# paup-morphy
wilcox.test(pprf, mmrf) # t = -127.97, df = 14153, p-value < 2.2e-16
# paup-ana
wilcox.test(pprf, aarf) # t = 18.163, df = 65.35, p-value < 2.2e-16
# morphy-ana
wilcox.test(mmrf, aarf) # t = 38.854, df = 72.299, p-value < 2.2e-16
pprfquartiles
mmrfquartiles
aarfquartiles
### Quartet
# paup-morphy
wilcox.test(ppqu, mmqu) # t = -100.15, df = 15821, p-value < 2.2e-16
# paup-ana
wilcox.test(ppqu, aaqu) # t = 77.431, df = 143.26, p-value < 2.2e-16
# morphy-ana
wilcox.test(mmqu, aaqu) # t = 151.05, df = 346.85, p-value < 2.2e-16
ppququartiles
mmququartiles
aaququartiles
##### de Lavigerie et al, 2020 #####
setwd("~/Documents/Imperial/Morphological Character Hierarchies/Data/de Lavigerie et al, 2020/")
library(ape)
library(distory)
library(phangorn)
library(phytools)
library(paleotree)
library(dplyr)
library(Quartet)
library(dispRity)
library(rlist)
library(ggpubr)
# paup
pauptrees <- read.nexus("Pauptrees-dL2020.tre.txt")
paup <- read.nexus("Paupcontree-dL2020.tre")
paup <- unroot(paup)
pauptrees <- list.take(pauptrees, 100)
pauptrees <- as.multiPhylo(pauptrees)
pauptrees <- unroot.multiPhylo(pauptrees)
# morphy
morphytrees <- read.nexus("Morphytrees-dL2020.tre.txt")
morphy <- read.nexus("Morphycontree-dL2020.tre")
morphy <- unroot(morphy)
morphytrees <- list.take(morphytrees, 100)
morphytrees <- as.multiPhylo(morphytrees)
morphytrees <- unroot.multiPhylo(morphytrees)
# anagallis
anatrees <- read.nexus("Anatrees-dL2020.txt.nex")
ana <- consensus(anatrees)
ana <- unroot(ana)
anatrees <- as.multiPhylo(anatrees)
anatrees <- unroot.multiPhylo(anatrees)
contreelist <- c(paup, morphy, ana)
treeslist <- c(pauptrees, morphytrees, anatrees)
#### Quartet ####
qu <- sapply(treeslist, function(x)
sapply(treeslist, QuartetPoints, cf=x))
qu1 <- as.data.frame(qu)
quartets <- c("Unresolved", "Contradicted", "Consistent")
quartets <- rep(quartets, length(qu1))
qu2 <- cbind(quartets, qu1)
qu3 <- subset(qu2, quartets == "Contradicted")
qu3 <- qu3[,2:ncol(qu3)]
colnames(qu3) <- rownames(qu3) <- c(paste("Paup", 1:length(pauptrees), sep = ""),
paste("Morphy", 1:length(morphytrees), sep = ""),
paste("Anagallis", 1:length(anatrees), sep = ""))
qu3 <- as.data.frame(qu3)
qu4 <- data.matrix(qu3)
# paup-paup
ppqu <- qu4[1:100, 1:100]
ppqu <- as.matrix(ppqu)
ppqu <- as.vector(ppqu)
ppququartiles <- quantile(ppqu)
ppqumedian <- ppququartiles[3]
# morphy-morphy
mmqu <- qu4[101:200, 101:200]
mmqu <- as.matrix(mmqu)
mmqu <- as.vector(mmqu)
mmququartiles <- quantile(mmqu)
mmqumedian <- mmququartiles[3]
# ana-ana
aaqu <- qu4[201:210, 201:210]
aaqu <- as.matrix(aaqu)
aaqu <- as.vector(aaqu)
aaququartiles <- quantile(aaqu)
aaqumedian <- aaququartiles[3]
# paup-morphy
pmqu <- qu4[1:100, 101:200]
pmqu <- as.matrix(pmqu)
pmqu <- as.vector(pmqu)
pmququartiles <- quantile(pmqu)
# paup-anagallis
paqu <- qu4[1:100, 201:210]
paqu <- as.matrix(paqu)
paqu <- as.vector(paqu)
paququartiles <- quantile(paqu)
# morphy-anagallis
maqu <- qu4[101:200, 201:210]
maqu <- as.matrix(maqu)
maqu <- as.vector(maqu)
maququartiles <- quantile(maqu)
# median and quartiles
qulist <- list(pmqu, paqu, maqu)
ququartiles <- as.data.frame(sapply(qulist, quantile, na.rm = T))
colnames(ququartiles) <- c("PAUP* vs Morphy", "PAUP* vs Anagallis", "Morphy vs Anagallis")
qumedian <- ququartiles[3,]
quLQ <- ququartiles[2,]
quUQ <- ququartiles[4,]
### normalise
random.Q.quantile <- function(number.tips, number.trees, difference.function) {
trees1 <- rmtree(number.trees, number.tips, br = NULL, rooted = F)
trees2 <- rmtree(number.trees, number.tips, br = NULL, rooted = F)
result <- mapply(difference.function, trees1, trees2, SIMPLIFY = F)
result <- bind_rows(result)
result <- sapply(result, quantile)
return(result)
}
set.seed(12345)
randoQquantile <- random.Q.quantile(Ntip(paup), 100, QuartetPoints)
randoQquantile <- randoQquantile[,2]
randoQmedian <- randoQquantile[3]
randoQLQ <- randoQquantile[2]
randoQUQ <- randoQquantile[4]
normalisedQmedian <- qumedian/randoQmedian
normalisedQLQ <- quLQ/randoQLQ
normalisedQUQ <- quUQ/randoQUQ
##### Visualisation #####
palette <- wesanderson::wes_palette(name = "Chevalier1")
palette <- c(palette, "#25291C", "#E6E49F")
# PAUP* = palette[1]
# Morphy = palette[2]
# Anagallis = palette[3]
# PAUP* vs Morphy = palette[4]
# PAUP* vs Anagallis = palette[5]
# Morphy vs Anagallis = palette[6]
comparepalette <- c(palette[6], palette[5], palette[4])
library(vegan)
library(cowplot)
# programme column
paupnames <- c("PAUP*")
paupnames <- rep(paupnames, length(pauptrees))
morphynames <- c("Morphy")
morphynames <- rep(morphynames, length(morphytrees))
ananames <- c("Anagallis")
ananames <- rep(ananames, length(anatrees))
Programme <- c(paupnames, morphynames, ananames)
mdsqu <- metaMDS(qu4, distance = "euclidean", trymax = 999)
stressplot(mdsqu)
mdsqupoints <- as.data.frame(mdsqu$points)
mdsqupoints <- cbind(mdsqupoints, Programme)
# Scatter plot with marginal density distribution plot
jitter <- position_jitter(width = 1, height = 1)
mdsquplot1 <- ggplot(mdsqupoints) +
geom_point(aes(MDS1, MDS2, colour = Programme), position = jitter, size = 2.5, alpha = 1) +
theme_pubr() +
theme(axis.line = element_blank(), axis.ticks = element_blank(), axis.title = element_blank(),
axis.text = element_blank(), legend.position = "none", panel.border = element_rect(colour = "grey", size = 0.5, fill = NA)) +
color_palette(palette = c(palette[3], palette[2], palette[1]))
mdsquplot2 <- ggplot(mdsqupoints) +
geom_density(aes(MDS1, fill = Programme), alpha = 0.4) +
theme_pubr() +
theme(axis.title = element_text(size = 11)) +
fill_palette(palette = c(palette[3], palette[2], palette[1]))
mdsquplot3 <- ggplot(mdsqupoints) +
geom_density(aes(y = MDS2, fill = Programme), alpha = 0.4) +
theme_pubr() +
theme(legend.position = "none", axis.title = element_text(size = 11)) +
fill_palette(palette = c(palette[3], palette[2], palette[1])) +
scale_x_continuous(breaks = c(0, 0.006))
blankPlot <- ggplot()+geom_blank(aes(1,1))+
theme(plot.background = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_blank(),
panel.background = element_blank(),
axis.title.x = element_blank(),
axis.title.y = element_blank(),
axis.text.x = element_blank(),
axis.text.y = element_blank(),
axis.ticks = element_blank())
pdf("Figures/Quartet MDS with density distribution dL2020.pdf", 8, 5.3)
ggdraw() +
draw_plot(mdsquplot2, x = 0, y = 0.7, width = 0.7, height = 0.3) +
draw_plot(mdsquplot1, x = 0, y = 0, width = 0.7, height = 0.7) +
draw_plot(mdsquplot3, x = 0.7, y = 0, width = 0.3, height = 0.7) +
draw_plot_label(label = "A", x = 0, y = 0.98) +
draw_plot_label(label = "B", x = 0, y = 0.74) +
draw_plot_label(label = "C", x = 0.7, y = 0.74)
dev.off()
# Scatter plot with marginal density distribution plot
jitter <- position_jitter(width = 10, height = 10)
mdsquplot1 <- ggplot(mdsqupoints) +
geom_point(aes(MDS1, MDS2, colour = Programme), position = jitter, size = 2.5, alpha = 1) +
theme_pubr() +
theme(axis.line = element_blank(), axis.ticks = element_blank(), axis.title = element_blank(),
axis.text = element_blank(), legend.position = "none", panel.border = element_rect(colour = "grey", size = 0.5, fill = NA)) +
color_palette(palette = c(palette[3], palette[2], palette[1]))
mdsquplot2 <- ggplot(mdsqupoints) +
geom_density(aes(MDS1, fill = Programme), alpha = 0.4) +
theme_pubr() +
theme(axis.title = element_text(size = 11)) +
fill_palette(palette = c(palette[3], palette[2], palette[1]))
mdsquplot3 <- ggplot(mdsqupoints) +
geom_density(aes(y = MDS2, fill = Programme), alpha = 0.4) +
theme_pubr() +
theme(legend.position = "none", axis.title = element_text(size = 11)) +
fill_palette(palette = c(palette[3], palette[2], palette[1])) +
scale_x_continuous(breaks = c(0, 0.006))
blankPlot <- ggplot()+geom_blank(aes(1,1))+
theme(plot.background = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_blank(),
panel.background = element_blank(),
axis.title.x = element_blank(),
axis.title.y = element_blank(),
axis.text.x = element_blank(),
axis.text.y = element_blank(),
axis.ticks = element_blank())
pdf("Figures/Quartet MDS with density distribution dL2020.pdf", 8, 5.3)
ggdraw() +
draw_plot(mdsquplot2, x = 0, y = 0.7, width = 0.7, height = 0.3) +
draw_plot(mdsquplot1, x = 0, y = 0, width = 0.7, height = 0.7) +
draw_plot(mdsquplot3, x = 0.7, y = 0, width = 0.3, height = 0.7) +
draw_plot_label(label = "A", x = 0, y = 0.98) +
draw_plot_label(label = "B", x = 0, y = 0.74) +
draw_plot_label(label = "C", x = 0.7, y = 0.74)
dev.off()
# Scatter plot with marginal density distribution plot
jitter <- position_jitter(width = 1000, height = 1000)
mdsquplot1 <- ggplot(mdsqupoints) +
geom_point(aes(MDS1, MDS2, colour = Programme), position = jitter, size = 2.5, alpha = 1) +
theme_pubr() +
theme(axis.line = element_blank(), axis.ticks = element_blank(), axis.title = element_blank(),
axis.text = element_blank(), legend.position = "none", panel.border = element_rect(colour = "grey", size = 0.5, fill = NA)) +
color_palette(palette = c(palette[3], palette[2], palette[1]))
mdsquplot2 <- ggplot(mdsqupoints) +
geom_density(aes(MDS1, fill = Programme), alpha = 0.4) +
theme_pubr() +
theme(axis.title = element_text(size = 11)) +
fill_palette(palette = c(palette[3], palette[2], palette[1]))
mdsquplot3 <- ggplot(mdsqupoints) +
geom_density(aes(y = MDS2, fill = Programme), alpha = 0.4) +
theme_pubr() +
theme(legend.position = "none", axis.title = element_text(size = 11)) +
fill_palette(palette = c(palette[3], palette[2], palette[1])) +
scale_x_continuous(breaks = c(0, 0.006))
blankPlot <- ggplot()+geom_blank(aes(1,1))+
theme(plot.background = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_blank(),
panel.background = element_blank(),
axis.title.x = element_blank(),
axis.title.y = element_blank(),
axis.text.x = element_blank(),
axis.text.y = element_blank(),
axis.ticks = element_blank())
pdf("Figures/Quartet MDS with density distribution dL2020.pdf", 8, 5.3)
ggdraw() +
draw_plot(mdsquplot2, x = 0, y = 0.7, width = 0.7, height = 0.3) +
draw_plot(mdsquplot1, x = 0, y = 0, width = 0.7, height = 0.7) +
draw_plot(mdsquplot3, x = 0.7, y = 0, width = 0.3, height = 0.7) +
draw_plot_label(label = "A", x = 0, y = 0.98) +
draw_plot_label(label = "B", x = 0, y = 0.74) +
draw_plot_label(label = "C", x = 0.7, y = 0.74)
dev.off()
# Scatter plot with marginal density distribution plot
jitter <- position_jitter(width = 5000, height = 5000)
mdsquplot1 <- ggplot(mdsqupoints) +
geom_point(aes(MDS1, MDS2, colour = Programme), position = jitter, size = 2.5, alpha = 1) +
theme_pubr() +
theme(axis.line = element_blank(), axis.ticks = element_blank(), axis.title = element_blank(),
axis.text = element_blank(), legend.position = "none", panel.border = element_rect(colour = "grey", size = 0.5, fill = NA)) +
color_palette(palette = c(palette[3], palette[2], palette[1]))
mdsquplot2 <- ggplot(mdsqupoints) +
geom_density(aes(MDS1, fill = Programme), alpha = 0.4) +
theme_pubr() +
theme(axis.title = element_text(size = 11)) +
fill_palette(palette = c(palette[3], palette[2], palette[1]))
mdsquplot3 <- ggplot(mdsqupoints) +
geom_density(aes(y = MDS2, fill = Programme), alpha = 0.4) +
theme_pubr() +
theme(legend.position = "none", axis.title = element_text(size = 11)) +
fill_palette(palette = c(palette[3], palette[2], palette[1])) +
scale_x_continuous(breaks = c(0, 0.006))
blankPlot <- ggplot()+geom_blank(aes(1,1))+
theme(plot.background = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_blank(),
panel.background = element_blank(),
axis.title.x = element_blank(),
axis.title.y = element_blank(),
axis.text.x = element_blank(),
axis.text.y = element_blank(),
axis.ticks = element_blank())
pdf("Figures/Quartet MDS with density distribution dL2020.pdf", 8, 5.3)
ggdraw() +
draw_plot(mdsquplot2, x = 0, y = 0.7, width = 0.7, height = 0.3) +
draw_plot(mdsquplot1, x = 0, y = 0, width = 0.7, height = 0.7) +
draw_plot(mdsquplot3, x = 0.7, y = 0, width = 0.3, height = 0.7) +
draw_plot_label(label = "A", x = 0, y = 0.98) +
draw_plot_label(label = "B", x = 0, y = 0.74) +
draw_plot_label(label = "C", x = 0.7, y = 0.74)
dev.off()
# Scatter plot with marginal density distribution plot
jitter <- position_jitter(width = 10000, height = 10000)
mdsquplot1 <- ggplot(mdsqupoints) +
geom_point(aes(MDS1, MDS2, colour = Programme), position = jitter, size = 2.5, alpha = 1) +
theme_pubr() +
theme(axis.line = element_blank(), axis.ticks = element_blank(), axis.title = element_blank(),
axis.text = element_blank(), legend.position = "none", panel.border = element_rect(colour = "grey", size = 0.5, fill = NA)) +
color_palette(palette = c(palette[3], palette[2], palette[1]))
mdsquplot2 <- ggplot(mdsqupoints) +
geom_density(aes(MDS1, fill = Programme), alpha = 0.4) +
theme_pubr() +
theme(axis.title = element_text(size = 11)) +
fill_palette(palette = c(palette[3], palette[2], palette[1]))
mdsquplot3 <- ggplot(mdsqupoints) +
geom_density(aes(y = MDS2, fill = Programme), alpha = 0.4) +
theme_pubr() +
theme(legend.position = "none", axis.title = element_text(size = 11)) +
fill_palette(palette = c(palette[3], palette[2], palette[1])) +
scale_x_continuous(breaks = c(0, 0.006))
blankPlot <- ggplot()+geom_blank(aes(1,1))+
theme(plot.background = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_blank(),
panel.background = element_blank(),
axis.title.x = element_blank(),
axis.title.y = element_blank(),
axis.text.x = element_blank(),
axis.text.y = element_blank(),
axis.ticks = element_blank())
pdf("Figures/Quartet MDS with density distribution dL2020.pdf", 8, 5.3)
ggdraw() +
draw_plot(mdsquplot2, x = 0, y = 0.7, width = 0.7, height = 0.3) +
draw_plot(mdsquplot1, x = 0, y = 0, width = 0.7, height = 0.7) +
draw_plot(mdsquplot3, x = 0.7, y = 0, width = 0.3, height = 0.7) +
draw_plot_label(label = "A", x = 0, y = 0.98) +
draw_plot_label(label = "B", x = 0, y = 0.74) +
draw_plot_label(label = "C", x = 0.7, y = 0.74)
dev.off()
# Scatter plot with marginal density distribution plot
jitter <- position_jitter(width = 13000, height = 13000)
mdsquplot1 <- ggplot(mdsqupoints) +
geom_point(aes(MDS1, MDS2, colour = Programme), position = jitter, size = 2.5, alpha = 1) +
theme_pubr() +
theme(axis.line = element_blank(), axis.ticks = element_blank(), axis.title = element_blank(),
axis.text = element_blank(), legend.position = "none", panel.border = element_rect(colour = "grey", size = 0.5, fill = NA)) +
color_palette(palette = c(palette[3], palette[2], palette[1]))
mdsquplot2 <- ggplot(mdsqupoints) +
geom_density(aes(MDS1, fill = Programme), alpha = 0.4) +
theme_pubr() +
theme(axis.title = element_text(size = 11)) +
fill_palette(palette = c(palette[3], palette[2], palette[1]))
mdsquplot3 <- ggplot(mdsqupoints) +
geom_density(aes(y = MDS2, fill = Programme), alpha = 0.4) +
theme_pubr() +
theme(legend.position = "none", axis.title = element_text(size = 11)) +
fill_palette(palette = c(palette[3], palette[2], palette[1])) +
scale_x_continuous(breaks = c(0, 0.006))
blankPlot <- ggplot()+geom_blank(aes(1,1))+
theme(plot.background = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_blank(),
panel.background = element_blank(),
axis.title.x = element_blank(),
axis.title.y = element_blank(),
axis.text.x = element_blank(),
axis.text.y = element_blank(),
axis.ticks = element_blank())
pdf("Figures/Quartet MDS with density distribution dL2020.pdf", 8, 5.3)
ggdraw() +
draw_plot(mdsquplot2, x = 0, y = 0.7, width = 0.7, height = 0.3) +
draw_plot(mdsquplot1, x = 0, y = 0, width = 0.7, height = 0.7) +
draw_plot(mdsquplot3, x = 0.7, y = 0, width = 0.3, height = 0.7) +
draw_plot_label(label = "A", x = 0, y = 0.98) +
draw_plot_label(label = "B", x = 0, y = 0.74) +
draw_plot_label(label = "C", x = 0.7, y = 0.74)
dev.off()
##### de Lavigerie et al, 2020 #####
setwd("~/Documents/Imperial/Morphological Character Hierarchies/Data/de Lavigerie et al, 2020/")
library(ape)
library(distory)
library(phangorn)
library(phytools)
library(paleotree)
library(dplyr)
library(Quartet)
library(dispRity)
library(rlist)
library(ggpubr)
# paup
pauptrees <- read.nexus("Pauptrees-dL2020.tre.txt")
paup <- read.nexus("Paupcontree-dL2020.tre")
paup <- unroot(paup)
pauptrees <- list.take(pauptrees, 100)
pauptrees <- as.multiPhylo(pauptrees)
pauptrees <- unroot.multiPhylo(pauptrees)
# morphy
morphytrees <- read.nexus("Morphytrees-dL2020.tre.txt")
morphy <- read.nexus("Morphycontree-dL2020.tre")
morphy <- unroot(morphy)
morphytrees <- list.take(morphytrees, 100)
morphytrees <- as.multiPhylo(morphytrees)
morphytrees <- unroot.multiPhylo(morphytrees)
# anagallis
anatrees <- read.nexus("Anatrees-dL2020.txt.nex")
ana <- consensus(anatrees)
ana <- unroot(ana)
anatrees <- as.multiPhylo(anatrees)
anatrees <- unroot.multiPhylo(anatrees)
contreelist <- c(paup, morphy, ana)
treeslist <- c(pauptrees, morphytrees, anatrees)
comparePhylo(morphy, ana)
# visual comparison
par(mar=c(0,0,0,0))
phylo.diff(morphy, ana, type = "cladogram", edge.width = 1.5, label.offset = 0.5, no.margin = T)
phylo.diff(morphy, ana, type = "cladogram", edge.width = 1.5, label.offset = 0.5, no.margin = T, open.angle = "f")
phylo.diff(morphy, ana, type = "cladogram", edge.width = 1.5, label.offset = 0.5, no.margin = T,
open.angle = 120, cex = 0.5)
phylo.diff(morphy, ana, type = "cladogram", edge.width = 1.5, label.offset = 0.5, no.margin = T,
open.angle = 90, cex = 0.5)
phylo.diff(morphy, ana, type = "cladogram", edge.width = 1.5, label.offset = 0.5, no.margin = T,
open.angle = 10, cex = 0.5)
phylo.diff(morphy, ana, type = "cladogram", edge.width = 1.5, label.offset = 0.5, no.margin = T,
open.angle = 200, cex = 0.5)
phylo.diff(morphy, ana, type = "cladogram", edge.width = 1.5, label.offset = 0.5, no.margin = T,
open.angle = "r", cex = 0.5)
phylo.diff(morphy, ana, type = "cladogram", edge.width = 1.5, label.offset = 0.5, no.margin = T,
cex = 0.5)
phylo.diff(morphy, ana, type = "cladogram", edge.width = 1.5, label.offset = 0.5, no.margin = T,
cex = 0.5, open.angle = "F")
phylo.diff(paup, ana, type = "cladogram", edge.width = 1.5, label.offset = 0.5, no.margin = T)
phylo.diff(morphy, ana, type = "cladogram", edge.width = 1.5, label.offset = 0.5, no.margin = T, cex = 0.6)
phylo.diff(morphy, ana, type = "cladogram", edge.width = 1.5, label.offset = 0.5, no.margin = T, cex = 0.5)
phylo.diff(paup, ana, type = "cladogram", edge.width = 1.5, label.offset = 0.5, no.margin = T, cex = 0.5)
phylo.diff(morphy, ana, type = "cladogram", edge.width = 1.5, label.offset = 0.5, no.margin = T, cex = 0.55)
comparePhylo(morphy, ana)
