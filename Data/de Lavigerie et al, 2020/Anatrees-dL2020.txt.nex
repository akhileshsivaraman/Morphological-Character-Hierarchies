#NEXUS
[written Fri May 29 07:52:35 BST 2020 by Mesquite  version 3.40 (build 877) at Akhileshs-MacBook-Air.local/127.0.0.1]
BEGIN TREES[!trees_from_anagallis];
	Title Imported_trees;
	ID 01725f33da6b1;
	LINK Taxa = Taxa;
	TRANSLATE
[0] 		1 Zygorhiza_kochii,
[1] 		2 Albertocetus_meffordorum,
[2] 		3 Archaeodelphis_patrius,
[3] 		4 Olympicetus_avitus,
[4] 		5 Waipatia_maerewhenua,
[5] 		6 Physeter_macrocephalus,
[6] 		7 Aetiocetus_cotylalveus,
[7] 		8 Aetiocetus_polydentatus,
[8] 		9 Aetiocetus_weltoni,
[9] 		10 Aglaocetus_moreni,
[10] 		11 Aglaocetus_patulus,
[11] 		12 Antwerpibalaena_liberatlas,
[12] 		13 Archaebalaenoptera_castriarquati,
[13] 		14 Aulocetus_latus,
[14] 		15 Balaena_montalionis,
[15] 		16 Balaena_mysticetus,
[16] 		17 Balaena_ricei,
[17] 		18 Balaenella_brachyrhynus,
[18] 		19 Balaenoptera_acutorostrata,
[19] 		20 Balaenoptera_bertae,
[20] 		21 Balaenoptera_bonaerensis,
[21] 		22 Balaenoptera_borealis,
[22] 		23 Balaenoptera_musculus,
[23] 		24 Balaenoptera_omurai,
[24] 		25 Balaenoptera_physalus,
[25] 		26 Balaenoptera_portisi,
[26] 		27 Balaenoptera_ryani,
[27] 		28 Balaenoptera_siberi,
[28] 		29 Balaenula_astensis,
[29] 		30 Balaenula_sp.,
[30] 		31 Brandtocetus_chongulek,
[31] 		32 Caperea_marginata,
[32] 		33 Cephalotropis_coronatus,
[33] 		34 Cetotherium_megalophysum,
[34] 		35 Cetotherium_rathkii,
[35] 		36 Cetotherium_riabinini,
[36] 		37 Chonecetus_sookensis,
[37] 		38 Ciuciulea_davidi,
[38] 		39 Coronodon_havensteini,
[39] 		40 Diorocetus_chichibuensis,
[40] 		41 Diorocetus_hiatus,
[41] 		42 Diorocetus_shobarensis,
[42] 		43 Diunatans_luctoretemergo,
[43] 		44 Eomysticetus_whitmorei,
[44] 		45 Eschrichtioides_gastaldii,
[45] 		46 Eschrichtius_robustus,
[46] 		47 Eubalaena_ianitrix,
[47] 		48 Eubalaena_shinshuensis,
[48] 		49 Eubalaena_spp.,
[49] 		50 Fragilicetus_velponi,
[50] 		51 Fucaia_buelli,
[51] 		52 Fucaia_goedertorum,
[52] 		53 Gricetoides_aurorae,
[53] 		54 Herentalia_nigra,
[54] 		55 Herpetocetus_bramblei,
[55] 		56 Herpetocetus_morrowi,
[56] 		57 Herpetocetus_sp.,
[57] 		58 Herpetocetus_transatlanticus,
[58] 		59 Horopeta_umarere,
[59] 		60 Incakujira_anillodefuego,
[60] 		61 Isanacetus_laticephalus,
[61] 		62 Janjucetus_hunderi,
[62] 		63 Joumocetus_shimizui,
[63] 		64 Kurdalagonus_mchedlidzei,
[64] 		65 Llanocetus_denticrenatus,
[65] 		66 Mammalodon_colliveri,
[66] 		67 Mammalodon_hakataramea,
[67] 		68 Matapanui_waihao,
[68] 		69 Mauicetus_parki,
[69] 		70 Megaptera_hubachi,
[70] 		71 Megaptera_miocaena,
[71] 		72 Megaptera_novaeangliae,
[72] 		73 Metopocetus_durinasus,
[73] 		74 Metopocetus_hunteri,
[74] 		75 Metopocetus_vandelli,
[75] 		76 Micromysticetus_rothauseni,
[76] 		77 Miocaperea_pulchra,
[77] 		78 Morawanocetus_yabukii,
[78] 		79 Morenocetus_parvus,
[79] 		80 Mystacodon_selenensis,
[80] 		81 Nannocetus_eremus,
[81] 		82 NMNS_pv19540,
[82] 		83 NMNZ_mm001630,
[83] 		84 OCPC_1178,
[84] 		85 OU_22224,
[85] 		86 OU_22705,
[86] 		87 OU_gs10897,
[87] 		88 Parabalaenoptera_baulinensis,
[88] 		89 Parietobalaena_campiniana,
[89] 		90 Parietobalaena_palmeri,
[90] 		91 Parietobalaena_sp.,
[91] 		92 Parietobalaena_yamaokai,
[92] 		93 Pelocetus_calvertensis,
[93] 		94 Peripolocetus_vexillifer,
[94] 		95 Pinocetus_polonicus,
[95] 		96 Piscobalaena_nana,
[96] 		97 Plesiobalaenoptera_quarantellii,
[97] 		98 Thinocetus_arthritus,
[98] 		99 Tiphyocetus_temblorensis,
[99] 		100 Titanocetus_sammarinensis,
[100] 		101 Tiucetus_rosae,
[101] 		102 Tohoraata_raekohao,
[102] 		103 Tokarahia_kauaeroa,
[103] 		104 Tranatocetus_argillarius,
[104] 		105 Tranatocetus_maregermanicum,
[105] 		106 Uranocetus_gramensis,
[106] 		107 Waharoa_ruwhenua,
[107] 		108 Whakakai_waipata,
[108] 		109 Yamatocetus_canaliculatus,
[109] 		110 ZMT_67;
	TREE Imported_tree_1 = (((88,((60,(28,((72,(50,43)),(24,(83,((21,19),(22,(25,23)))))))),((13,(70,97)),20))),(26,(53,(46,45)))),(71,(27,(((93,106),(42,((((101,(63,((54,((105,104),(((64,(31,(36,35))),(33,((81,(58,((56,55),(82,57)))),(32,77)))),((96,(14,(34,75))),(38,(74,73)))))),100))),((110,(10,69)),(59,((((((84,(9,(8,7))),(52,51)),(37,(78,(87,((((3,2),(4,(6,5))),(1,(80,65))),(39,(62,(67,66)))))))),(76,((68,(103,(107,102))),(44,109)))),108),(85,(79,(94,(30,(18,(29,((17,(12,(16,15))),(47,(49,48))))))))))))),(92,(40,((89,(91,99)),(95,90))))),(86,61)))),(11,(41,98))))));
	TREE Imported_tree_2 = (((88,((60,(28,((72,(50,43)),(24,(83,((21,19),(22,(25,23)))))))),((13,(70,97)),20))),(26,(53,(46,45)))),(71,(27,(((93,106),(42,((((101,(63,((54,((105,104),(((64,(31,(36,35))),(33,((81,(58,((56,55),(82,57)))),(32,77)))),((96,(14,(34,75))),(38,(74,73)))))),100))),((110,(10,69)),(59,((((((84,(9,(8,7))),(52,51)),(37,(78,(87,(((4,((3,2),(6,5))),(1,(80,65))),(39,(62,(67,66)))))))),(76,((68,(103,(107,102))),(44,109)))),108),(85,(79,(94,(30,(18,(29,((17,(12,(16,15))),(47,(49,48))))))))))))),(92,(40,((89,(91,99)),(95,90))))),(86,61)))),(11,(41,98))))));
	TREE Imported_tree_3 = (((88,((60,(28,((72,43),(24,(83,((21,19),(22,(25,23)))))))),((50,(13,(70,97))),20))),(26,(53,(46,45)))),(71,(27,(((93,106),(42,((((101,(63,((54,((105,104),(((64,(31,(36,35))),(33,((81,(58,((56,55),(82,57)))),(32,77)))),((96,(14,(34,75))),(38,(74,73)))))),100))),((110,(10,69)),(59,((((((84,(9,(8,7))),(52,51)),(37,(78,(87,((((3,2),(4,(6,5))),(1,(80,65))),(39,(62,(67,66)))))))),(76,((68,(103,(107,102))),(44,109)))),108),(85,(79,(94,(30,(18,(29,((17,(12,(16,15))),(47,(49,48))))))))))))),(92,(40,((89,(91,99)),(95,90))))),(86,61)))),(11,(41,98))))));
	TREE Imported_tree_4 = (((26,(53,(46,45))),(88,(((13,(97,70)),20),(60,(28,((24,(83,((21,19),(22,(25,23))))),(72,(50,43)))))))),(71,(27,(((42,(((((110,(69,10)),(59,((85,(79,(94,(30,(18,(29,((17,(12,(16,15))),(47,(49,48))))))))),((((52,51),(84,(9,((108,7),8)))),(37,(78,(87,((((3,2),(4,(6,5))),(1,(80,65))),(39,(62,(67,66)))))))),(76,((44,109),((103,(107,102)),68))))))),(101,(63,(100,(54,((((33,((77,32),(81,(58,((56,55),(82,57)))))),(64,(31,(36,35)))),((38,(74,73)),(96,(14,(75,34))))),(105,104))))))),(92,(40,((89,(99,91)),(95,90))))),(86,61))),(106,93)),(11,(98,41))))));
	TREE Imported_tree_5 = (((26,(53,(46,45))),(88,(((13,(97,70)),20),(60,(28,((24,(83,((21,19),(22,(25,23))))),(72,(50,43)))))))),(71,(27,(((42,(((((110,(69,10)),(59,((85,(79,(94,(30,(18,(29,((17,(12,(16,15))),(47,(49,48))))))))),((((108,(84,(9,(7,8)))),(52,51)),(37,(78,(87,((((3,2),(4,(6,5))),(1,(80,65))),(39,(62,(67,66)))))))),(76,((44,109),((103,(107,102)),68))))))),(101,(63,(100,(54,((((33,((77,32),(81,(58,((56,55),(82,57)))))),(64,(31,(36,35)))),((38,(74,73)),(96,(14,(75,34))))),(105,104))))))),(92,(40,((89,(99,91)),(95,90))))),(86,61))),(106,93)),(11,(98,41))))));
	TREE Imported_tree_6 = (((88,((60,(28,((72,43),(24,(83,((21,19),(22,(25,23)))))))),((50,(13,(70,97))),20))),(26,(53,(46,45)))),(71,(27,(((93,106),(42,((((101,(63,((54,((105,104),(((64,(31,(36,35))),(33,((81,(58,((56,55),(82,57)))),(32,77)))),((96,(14,(34,75))),(38,(74,73)))))),100))),((110,(10,69)),(59,((((((84,(9,(8,7))),(52,51)),(37,(78,(87,(((1,(80,65)),(4,((3,2),(6,5)))),(39,(62,(67,66)))))))),(76,((68,(103,(107,102))),(44,109)))),108),(85,(79,(94,(30,(18,(29,((17,(12,(16,15))),(47,(49,48))))))))))))),(92,(40,((89,(91,99)),(95,90))))),(86,61)))),(11,(41,98))))));
	TREE Imported_tree_7 = (((26,(53,(46,45))),(88,(((13,(97,70)),20),(60,(28,((24,(83,((21,19),(22,(25,23))))),(72,(50,43)))))))),(71,(27,(((42,(((((110,(69,10)),(59,((85,(79,(94,(30,(18,(29,((17,(12,(16,15))),(47,(49,48))))))))),((((52,51),(84,(9,((108,7),8)))),(37,(78,(87,(((1,(80,65)),(4,((3,2),(6,5)))),(39,(62,(67,66)))))))),(76,((44,109),((103,(107,102)),68))))))),(101,(63,(100,(54,((((33,((77,32),(81,(58,((56,55),(82,57)))))),(64,(31,(36,35)))),((38,(74,73)),(96,(14,(75,34))))),(105,104))))))),(92,(40,((89,(99,91)),(95,90))))),(86,61))),(106,93)),(11,(98,41))))));
	TREE Imported_tree_8 = (((26,(53,(46,45))),(88,(((13,(97,70)),20),(60,(28,((24,(83,((21,19),(22,(25,23))))),(72,(50,43)))))))),(71,(27,(((42,(((((110,(69,10)),(59,((85,(79,(94,(30,(18,(29,((17,(12,(16,15))),(47,(49,48))))))))),((((108,(84,(9,(7,8)))),(52,51)),(37,(78,(87,(((1,(80,65)),(4,((3,2),(6,5)))),(39,(62,(67,66)))))))),(76,((44,109),((103,(107,102)),68))))))),(101,(63,(100,(54,((((33,((77,32),(81,(58,((56,55),(82,57)))))),(64,(31,(36,35)))),((38,(74,73)),(96,(14,(75,34))))),(105,104))))))),(92,(40,((89,(99,91)),(95,90))))),(86,61))),(106,93)),(11,(98,41))))));
	TREE Imported_tree_9 = (((26,(53,(46,45))),(88,((20,(50,(13,(97,70)))),(60,(28,((24,(83,((21,19),(22,(25,23))))),(72,43))))))),(71,(27,(((42,(((((110,(69,10)),(59,((85,(79,(94,(30,(18,(29,((17,(12,(16,15))),(47,(49,48))))))))),((((52,51),(84,(9,((108,7),8)))),(37,(78,(87,((((3,2),(4,(6,5))),(1,(80,65))),(39,(62,(67,66)))))))),(76,((44,109),((103,(107,102)),68))))))),(101,(63,(100,(54,((((33,((77,32),(81,(58,((56,55),(82,57)))))),(64,(31,(36,35)))),((38,(74,73)),(96,(14,(75,34))))),(105,104))))))),(92,(40,((89,(99,91)),(95,90))))),(86,61))),(106,93)),(11,(98,41))))));
	TREE Imported_tree_10 = (((26,(53,(46,45))),(88,((20,(50,(13,(97,70)))),(60,(28,((24,(83,((21,19),(22,(25,23))))),(72,43))))))),(71,(27,(((42,(((((110,(69,10)),(59,((85,(79,(94,(30,(18,(29,((17,(12,(16,15))),(47,(49,48))))))))),((((108,(84,(9,(7,8)))),(52,51)),(37,(78,(87,((((3,2),(4,(6,5))),(1,(80,65))),(39,(62,(67,66)))))))),(76,((44,109),((103,(107,102)),68))))))),(101,(63,(100,(54,((((33,((77,32),(81,(58,((56,55),(82,57)))))),(64,(31,(36,35)))),((38,(74,73)),(96,(14,(75,34))))),(105,104))))))),(92,(40,((89,(99,91)),(95,90))))),(86,61))),(106,93)),(11,(98,41))))));

END;



