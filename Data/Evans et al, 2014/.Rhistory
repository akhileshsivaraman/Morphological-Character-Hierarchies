normpprf <- as.numeric(pprf/randoRFmedian)
normpmrf <- as.numeric(pmrf/randoRFmedian)
normparf <- as.numeric(parf/randoRFmedian)
normmarf <- as.numeric(marf/randoRFmedian)
bhatt.coeff(normpprf, normpmrf) # 0.7751657
bhatt.coeff(normpprf, normparf) # 0.9484536
bhatt.coeff(normpmrf, normparf) # 0.9326664
bhatt.coeff(normpmrf, normmarf) # 0.9872782
bhatt.coeff(normparf, normmarf) # 0.9630001
normppqu <- as.numeric(ppqu/randoQmedian)
normpmqu <- as.numeric(pmqu/randoQmedian)
normpaqu <- as.numeric(paqu/randoQmedian)
normmaqu <- as.numeric(maqu/randoQmedian)
bhatt.coeff(normppqu, normpmqu) # 0.7288873
bhatt.coeff(normppqu, normpaqu) # 0.9274397
bhatt.coeff(normpmqu, normpaqu) # 0.8756445
bhatt.coeff(normpmqu, normmaqu) # 0.946402
bhatt.coeff(normpaqu, normmaqu) # 0.8371883
##### Visualisation #####
palette <- wesanderson::wes_palette(name = "Chevalier1")
palette <- c(palette, "#25291C", "#E6E49F")
# PAUP* = palette[1]
# Morphy = palette[2]
# Anagallis = palette[3]
# PAUP* vs Morphy = palette[4]
# PAUP* vs Anagallis = palette[5]
# Morphy vs Anagallis = palette[6]
comparepalette <- c(palette[6], palette[5], palette[4])
#### Median and IQR ####
library(data.table)
library(gridExtra)
library(cowplot)
par(mar=c(0,0,0,0))
rawdata <- setDT(rawdata, keep.rownames = T)
# RF plot
rfplot <- ggplot(rawdata, aes(rn, rawdata$`Robinson-Foulds Distance`)) + theme_pubr() +
geom_pointrange(aes(x = rn, ymin = rawdata$`Robinson-Foulds Distance LQ`, ymax = rawdata$`Robinson-Foulds Distance UQ`,
colour = rn)) +
labs(x = "Pairwise comparison",
y = "Robinson-Foulds
distance") +
theme(axis.text.x = element_blank(), axis.ticks.x = element_blank(), axis.title = element_text(size = 12)) +
color_palette(palette = comparepalette)
# Quartet
quartplot <- ggplot(rawdata, aes(rn, rawdata$`Quartet Distances`)) + theme_pubr() +
geom_pointrange(aes(x = rn, ymin = rawdata$`Quartet Distances LQ`, ymax = rawdata$`Quartet Distances UQ`,
colour = rn)) +
labs(x = "Pairwise comparison",
y = "Quartet distance") +
theme(axis.text.x = element_blank(), axis.ticks.x = element_blank(), axis.title = element_text(size = 12),
legend.box = "horizontal", legend.position = "bottom", legend.title = element_blank()) +
color_palette(palette = comparepalette)
averageplots <- plot_grid(rfplot + theme(legend.position = "none"),
quartplot + theme(legend.position = "none"),
labels = "AUTO", nrow = 1, ncol = 2)
legend <- get_legend(quartplot +
theme(legend.position = "bottom") +
guides(colour = guide_legend(nrow = 1)))
pdf("Figures/median.pdf", 8, 5.83)
plot_grid(averageplots, legend, ncol = 1, rel_heights = c(1,0.1))
dev.off()
#### MDS ####
library(vegan)
library(cowplot)
# programme column
paupnames <- c("PAUP*")
paupnames <- rep(paupnames, length(pauptrees))
morphynames <- c("Morphy")
morphynames <- rep(morphynames, length(morphytrees))
ananames <- c("Anagallis")
ananames <- rep(ananames, length(anatrees))
Programme <- c(paupnames, morphynames, ananames)
### RF
mdsrf <- metaMDS(rf, distance = "euclidean", trymax = 999)
stressplot(mdsrf)
mdsrfpoints <- as.data.frame(mdsrf$points)
mdsrfpoints <- cbind(mdsrfpoints, Programme)
jitter <- position_jitter(width = 0.6, height = 0.6)
# Scatter plot with marginal density distribution plot
mdsrfplot1 <- ggplot(mdsrfpoints) +
geom_point(aes(MDS1, MDS2, colour = Programme), position = "jitter", size = 2.5, alpha = 1) +
theme_pubr() +
theme(axis.line = element_blank(), axis.ticks = element_blank(), axis.title = element_blank(),
axis.text = element_blank(), legend.position = "none", panel.border = element_rect(colour = "grey", size = 0.5, fill = NA)) +
color_palette(palette = c(palette[3], palette[2], palette[1]))
mdsrfplot2 <- ggplot(mdsrfpoints) +
geom_density(aes(MDS1, fill = Programme), alpha = 0.4) +
theme_pubr() +
theme(axis.title = element_text(size = 11)) +
fill_palette(palette = c(palette[3], palette[2], palette[1]))
mdsrfplot3 <- ggplot(mdsrfpoints) +
geom_density(aes(MDS2, fill = Programme), alpha = 0.4) +
theme_pubr() +
theme(legend.position = "none", axis.title = element_text(size = 11)) +
fill_palette(palette = c(palette[3], palette[2], palette[1]))
blankPlot <- ggplot()+geom_blank(aes(1,1))+
theme(plot.background = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_blank(),
panel.background = element_blank(),
axis.title.x = element_blank(),
axis.title.y = element_blank(),
axis.text.x = element_blank(),
axis.text.y = element_blank(),
axis.ticks = element_blank())
pdf("Figures/RF MDS with density distribution C2020.pdf", 8, 5.3)
ggdraw() +
draw_plot(mdsrfplot2, x = 0, y = 0.7, width = 0.7, height = 0.3) +
draw_plot(mdsrfplot1, x = 0, y = 0, width = 0.7, height = 0.7) +
draw_plot(mdsrfplot3, x = 0.7, y = 0, width = 0.3, height = 0.7) +
draw_plot_label(label = "A", x = 0, y = 0.98) +
draw_plot_label(label = "B", x = 0, y = 0.73) +
draw_plot_label(label = "C", x = 0.7, y = 0.73)
dev.off()
### Quartet
mdsqu <- metaMDS(qu4, distance = "euclidean", trymax = 999)
stressplot(mdsqu)
mdsqupoints <- as.data.frame(mdsqu$points)
mdsqupoints <- cbind(mdsqupoints, Programme)
jitter <- position_jitter(width = 0.6, height = 0.6)
# Scatter plot with marginal density distribution plot
mdsquplot1 <- ggplot(mdsqupoints) +
geom_point(aes(MDS1, MDS2, colour = Programme), position = "jitter", size = 2.5, alpha = 1) +
theme_pubr() +
theme(axis.line = element_blank(), axis.ticks = element_blank(), axis.title = element_blank(),
axis.text = element_blank(), legend.position = "none", panel.border = element_rect(colour = "grey", size = 0.5, fill = NA)) +
color_palette(palette = c(palette[3], palette[2], palette[1]))
mdsquplot2 <- ggplot(mdsqupoints) +
geom_density(aes(MDS1, fill = Programme), alpha = 0.4) +
theme_pubr() +
theme(axis.title = element_text(size = 11)) +
fill_palette(palette = c(palette[3], palette[2], palette[1]))
mdsquplot3 <- ggplot(mdsqupoints) +
geom_density(aes(MDS2, fill = Programme), alpha = 0.4) +
theme_pubr() +
theme(legend.position = "none", axis.title = element_text(size = 11)) +
fill_palette(palette = c(palette[3], palette[2], palette[1]))
blankPlot <- ggplot()+geom_blank(aes(1,1))+
theme(plot.background = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_blank(),
panel.background = element_blank(),
axis.title.x = element_blank(),
axis.title.y = element_blank(),
axis.text.x = element_blank(),
axis.text.y = element_blank(),
axis.ticks = element_blank())
pdf("Figures/Quartet MDS with density distribution C2020.pdf", 8, 5.3)
ggdraw() +
draw_plot(mdsquplot2, x = 0, y = 0.7, width = 0.7, height = 0.3) +
draw_plot(mdsquplot1, x = 0, y = 0, width = 0.7, height = 0.7) +
draw_plot(mdsquplot3, x = 0.7, y = 0, width = 0.3, height = 0.7) +
draw_plot_label(label = "A", x = 0, y = 0.98) +
draw_plot_label(label = "B", x = 0, y = 0.73) +
draw_plot_label(label = "C", x = 0.7, y = 0.73)
dev.off()
##### Atkinson, 2019 #####
setwd("~/Documents/Imperial/Morphological Character Hierarchies/Data/Atkinson, 2019/")
library(ape)
library(distory)
library(phangorn)
library(phytools)
library(paleotree)
library(dplyr)
library(Quartet)
library(dispRity)
library(rlist)
library(ggpubr)
# paup
pauptrees <- read.nexus("Pauptrees-A2019.tre")
paup <- read.nexus("Paupcontree-A2019.tre")
paup <- unroot(paup)
pauptrees <- list.take(pauptrees, 100)
pauptrees <- as.multiPhylo(pauptrees)
pauptrees <- unroot.multiPhylo(pauptrees)
# morphy
morphytrees <- read.nexus("Morphytrees-A2019.tre")
morphy <- consensus(morphytrees)
morphy <- unroot(morphy)
morphytrees <- list.take(morphytrees, 100)
morphytrees <- as.multiPhylo(morphytrees)
morphytrees <- unroot.multiPhylo(morphytrees)
# anagallis
anatrees <- read.nexus("Anatrees-A2019.nex")
anatrees <- multi2di.multiPhylo(anatrees)
ana <- consensus(anatrees)
ana <- unroot(ana)
anatrees <- as.multiPhylo(anatrees)
anatrees <- unroot.multiPhylo(anatrees)
contreelist <- c(paup, morphy, ana)
treeslist <- c(pauptrees, morphytrees, anatrees)
##### Metrics #####
#### RF ####
rf <- sapply(treeslist, function(x)
sapply(treeslist, RF.dist, tree1=x))
colnames(rf) <- rownames(rf) <- c(paste("Paup", 1:length(pauptrees), sep = ""),
paste("Morphy", 1:length(morphytrees), sep = ""),
paste("Anagallis", 1:length(anatrees), sep = ""))
rf <- as.data.frame(rf)
# paup-paup
pprf <- rf[1:100, 1:100]
pprf <- as.matrix(pprf)
pprf <- as.vector(pprf)
pprfquartiles <- quantile(pprf)
pprfmedian <- pprfquartiles[3]
# paup morphy
pmrf <- rf[1:100, 101:200]
pmrf <- as.matrix(pmrf)
pmrf <- as.vector(pmrf)
# paup anagallis
parf <- rf[1:100, 201:260]
parf <- as.matrix(parf)
parf <- as.vector(parf)
# morphy anagallis
marf <- rf[101:200, 201:260]
marf <- as.matrix(marf)
marf <- as.vector(marf)
# median
rflist <- list(pmrf, parf, marf)
rfquartiles <- as.data.frame(sapply(rflist, quantile, na.rm = T))
colnames(rfquartiles) <- c("PAUP* vs Morphy", "PAUP* vs Anagallis", "Morphy vs Anagallis")
rfmedian <- rfquartiles[3,]
rfLQ <- rfquartiles[2,]
rfUQ <- rfquartiles[4,]
### normalise
random.comparisons.quantile <- function(number.tips, number.trees, difference.function) {
trees1 <- rmtree(number.trees, number.tips, br = NULL, rooted = F)
trees2 <- rmtree(number.trees, number.tips, br = NULL, rooted = F)
result <- quantile(unlist(mapply(difference.function, trees1, trees2, SIMPLIFY = F)))
return(result)
}
set.seed(12345)
randoRFquantile <- random.comparisons.quantile(Ntip(paup), 100, RF.dist)
randoRFmedian <- randoRFquantile[3]
randoRFLQ <- randoRFquantile[2]
randoRFUQ <- randoRFquantile[4]
normalisedRFmedian <- rfmedian/randoRFmedian
normalisedRFLQ <- rfLQ/randoRFLQ
normalisedRFUQ <- rfUQ/randoRFUQ
#### Quartet ####
qu <- sapply(treeslist, function(x)
sapply(treeslist, QuartetPoints, cf=x))
qu1 <- as.data.frame(qu)
quartets <- c("Unresolved", "Contradicted", "Consistent")
quartets <- rep(quartets, length(qu1))
qu2 <- cbind(quartets, qu1)
qu3 <- subset(qu2, quartets == "Contradicted")
qu3 <- qu3[,2:ncol(qu3)]
colnames(qu3) <- rownames(qu3) <- c(paste("Paup", 1:length(pauptrees), sep = ""),
paste("Morphy", 1:length(morphytrees), sep = ""),
paste("Anagallis", 1:length(anatrees), sep = ""))
qu3 <- as.data.frame(qu3)
qu4 <- data.matrix(qu3)
# paup-paup
ppqu <- qu4[1:100, 1:100]
ppqu <- as.matrix(ppqu)
ppqu <- as.vector(ppqu)
ppququartiles <- quantile(ppqu)
ppqumedian <- ppququartiles[3]
# paup-morphy
pmqu <- qu4[1:100, 101:200]
pmqu <- as.matrix(pmqu)
pmqu <- as.vector(pmqu)
pmququartiles <- quantile(pmqu)
# paup-anagallis
paqu <- qu4[1:100, 201:260]
paqu <- as.matrix(paqu)
paqu <- as.vector(paqu)
paququartiles <- quantile(paqu)
# morphy-anagallis
maqu <- qu4[101:200, 201:260]
maqu <- as.matrix(maqu)
maqu <- as.vector(maqu)
maququartiles <- quantile(maqu)
# median and quartiles
qulist <- list(pmqu, paqu, maqu)
ququartiles <- as.data.frame(sapply(qulist, quantile, na.rm = T))
colnames(ququartiles) <- c("PAUP* vs Morphy", "PAUP* vs Anagallis", "Morphy vs Anagallis")
qumedian <- ququartiles[3,]
quLQ <- ququartiles[2,]
quUQ <- ququartiles[4,]
### normalise
random.Q.quantile <- function(number.tips, number.trees, difference.function) {
trees1 <- rmtree(number.trees, number.tips, br = NULL, rooted = F)
trees2 <- rmtree(number.trees, number.tips, br = NULL, rooted = F)
result <- mapply(difference.function, trees1, trees2, SIMPLIFY = F)
result <- bind_rows(result)
result <- sapply(result, quantile)
return(result)
}
set.seed(12345)
randoQquantile <- random.Q.quantile(Ntip(paup), 100, QuartetPoints)
randoQquantile <- randoQquantile[,2]
randoQmedian <- randoQquantile[3]
randoQLQ <- randoQquantile[2]
randoQUQ <- randoQquantile[4]
normalisedQmedian <- qumedian/randoQmedian
normalisedQLQ <- quLQ/randoQLQ
normalisedQUQ <- quUQ/randoQUQ
#### save data ####
# raw data - note: Tree Contradiction is already normalised
rawdata <- as.data.frame(t(rbind(rfmedian, qumedian)))
colnames(rawdata) <- c("Robinson-Foulds Distance", "Quartet Distances")
rownames(rawdata) <- c("Paup vs Morphy", "Paup vs Anagallis", "Morphy vs Anagallis")
rawdata$`Robinson-Foulds Distance UQ` <- t(rfUQ)
rawdata$`Robinson-Foulds Distance LQ` <- t(rfLQ)
rawdata$`Quartet Distances UQ` <- t(quUQ)
rawdata$`Quartet Distances LQ` <- t(quLQ)
write.csv(rawdata, file = "rawdataA2019.csv")
# normalised data
normdata <- as.data.frame(t(rbind(normalisedRFmedian, normalisedQmedian)))
colnames(normdata) <- c("Robinson-Foulds Distance", "Quartet Distances")
rownames(normdata) <- c("Paup vs Morphy", "Paup vs Anagallis", "Morphy vs Anagallis")
normdata$`Robinson-Foulds Distance UQ` <- t(normalisedRFUQ)
normdata$`Robinson-Foulds Distance LQ` <- t(normalisedRFLQ)
normdata$`Quartet Distances UQ` <- t(normalisedQUQ)
normdata$`Quartet Distances LQ` <- t(normalisedQLQ)
write.csv(normdata, file = "normdataA2019.csv")
##### Stats tests ##### redo
normpprf <- as.numeric(pprf/randoRFmedian)
normpmrf <- as.numeric(pmrf/randoRFmedian)
normparf <- as.numeric(parf/randoRFmedian)
normmarf <- as.numeric(marf/randoRFmedian)
bhatt.coeff(normpprf, normpmrf) # 0
bhatt.coeff(normpprf, normparf) # 0
bhatt.coeff(normpmrf, normparf) # 0.6179834
bhatt.coeff(normpmrf, normmarf) # 0.8688306
bhatt.coeff(normparf, normmarf) # 0.6809558
normppqu <- as.numeric(ppqu/randoQmedian)
normpmqu <- as.numeric(pmqu/randoQmedian)
normpaqu <- as.numeric(paqu/randoQmedian)
normmaqu <- as.numeric(maqu/randoQmedian)
bhatt.coeff(normppqu, normpmqu) # 0
bhatt.coeff(normppqu, normpaqu) # 0
bhatt.coeff(normpmqu, normpaqu) # 0.6121141
bhatt.coeff(normpmqu, normmaqu) # 0.7420594
bhatt.coeff(normpaqu, normmaqu) # 0.7843032
##### Visualisation #####
palette <- wesanderson::wes_palette(name = "Chevalier1")
palette <- c(palette, "#25291C", "#E6E49F")
# PAUP* = palette[1]
# Morphy = palette[2]
# Anagallis = palette[3]
# PAUP* vs Morphy = palette[4]
# PAUP* vs Anagallis = palette[5]
# Morphy vs Anagallis = palette[6]
comparepalette <- c(palette[6], palette[5], palette[4])
#### Median and IQR ####
library(data.table)
library(gridExtra)
library(cowplot)
par(mar=c(0,0,0,0))
rawdata <- setDT(rawdata, keep.rownames = T)
# RF plot
rfplot <- ggplot(rawdata, aes(rn, rawdata$`Robinson-Foulds Distance`)) + theme_pubr() +
geom_pointrange(aes(x = rn, ymin = rawdata$`Robinson-Foulds Distance LQ`, ymax = rawdata$`Robinson-Foulds Distance UQ`,
colour = rn)) +
labs(x = "Pairwise comparison",
y = "Robinson-Foulds
distance") +
theme(axis.text.x = element_blank(), axis.ticks.x = element_blank(), axis.title = element_text(size = 12)) +
color_palette(palette = comparepalette)
# Quartet
quartplot <- ggplot(rawdata, aes(rn, rawdata$`Quartet Distances`)) + theme_pubr() +
geom_pointrange(aes(x = rn, ymin = rawdata$`Quartet Distances LQ`, ymax = rawdata$`Quartet Distances UQ`,
colour = rn)) +
labs(x = "Pairwise comparison",
y = "Quartet distance") +
theme(axis.text.x = element_blank(), axis.ticks.x = element_blank(), axis.title = element_text(size = 12),
legend.box = "horizontal", legend.position = "bottom", legend.title = element_blank()) +
color_palette(palette = comparepalette)
averageplots <- plot_grid(rfplot + theme(legend.position = "none"),
quartplot + theme(legend.position = "none"),
labels = "AUTO", nrow = 1, ncol = 2)
legend <- get_legend(quartplot +
theme(legend.position = "bottom") +
guides(colour = guide_legend(nrow = 1)))
pdf("Figures/median.pdf", 8, 5.83)
plot_grid(averageplots, legend, ncol = 1, rel_heights = c(1,0.1))
dev.off()
#### MDS ####
library(vegan)
library(cowplot)
# programme column
paupnames <- c("PAUP*")
paupnames <- rep(paupnames, length(pauptrees))
morphynames <- c("Morphy")
morphynames <- rep(morphynames, length(morphytrees))
ananames <- c("Anagallis")
ananames <- rep(ananames, length(anatrees))
Programme <- c(paupnames, morphynames, ananames)
### RF
mdsrf <- metaMDS(rf, distance = "euclidean", trymax = 999)
stressplot(mdsrf)
mdsrfpoints <- as.data.frame(mdsrf$points)
mdsrfpoints <- cbind(mdsrfpoints, Programme)
jitter <- position_jitter(width = 0.6, height = 0.6)
# Scatter plot with marginal density distribution plot
mdsrfplot1 <- ggplot(mdsrfpoints) +
geom_point(aes(MDS1, MDS2, colour = Programme), position = "jitter", size = 2.5, alpha = 1) +
theme_pubr() +
theme(axis.line = element_blank(), axis.ticks = element_blank(), axis.title = element_blank(),
axis.text = element_blank(), legend.position = "none", panel.border = element_rect(colour = "grey", size = 0.5, fill = NA)) +
color_palette(palette = c(palette[3], palette[2], palette[1]))
mdsrfplot2 <- ggplot(mdsrfpoints) +
geom_density(aes(MDS1, fill = Programme), alpha = 0.4) +
theme_pubr() +
theme(axis.title = element_text(size = 11)) +
fill_palette(palette = c(palette[3], palette[2], palette[1]))
mdsrfplot3 <- ggplot(mdsrfpoints) +
geom_density(aes(MDS2, fill = Programme), alpha = 0.4) +
theme_pubr() +
theme(legend.position = "none", axis.title = element_text(size = 11)) +
fill_palette(palette = c(palette[3], palette[2], palette[1]))
blankPlot <- ggplot()+geom_blank(aes(1,1))+
theme(plot.background = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_blank(),
panel.background = element_blank(),
axis.title.x = element_blank(),
axis.title.y = element_blank(),
axis.text.x = element_blank(),
axis.text.y = element_blank(),
axis.ticks = element_blank())
pdf("Figures/RF MDS with density distribution A2019.pdf", 8, 5.3)
ggdraw() +
draw_plot(mdsrfplot2, x = 0, y = 0.7, width = 0.7, height = 0.3) +
draw_plot(mdsrfplot1, x = 0, y = 0, width = 0.7, height = 0.7) +
draw_plot(mdsrfplot3, x = 0.7, y = 0, width = 0.3, height = 0.7) +
draw_plot_label(label = "A", x = 0, y = 0.98) +
draw_plot_label(label = "B", x = 0, y = 0.73) +
draw_plot_label(label = "C", x = 0.7, y = 0.73)
dev.off()
### Quartet
mdsqu <- metaMDS(qu4, distance = "euclidean", trymax = 999)
stressplot(mdsqu)
mdsqupoints <- as.data.frame(mdsqu$points)
mdsqupoints <- cbind(mdsqupoints, Programme)
jitter <- position_jitter(width = 0.6, height = 0.6)
# Scatter plot with marginal density distribution plot
mdsquplot1 <- ggplot(mdsqupoints) +
geom_point(aes(MDS1, MDS2, colour = Programme), position = "jitter", size = 2.5, alpha = 1) +
theme_pubr() +
theme(axis.line = element_blank(), axis.ticks = element_blank(), axis.title = element_blank(),
axis.text = element_blank(), legend.position = "none", panel.border = element_rect(colour = "grey", size = 0.5, fill = NA)) +
color_palette(palette = c(palette[3], palette[2], palette[1]))
mdsquplot2 <- ggplot(mdsqupoints) +
geom_density(aes(MDS1, fill = Programme), alpha = 0.4) +
theme_pubr() +
theme(axis.title = element_text(size = 11)) +
fill_palette(palette = c(palette[3], palette[2], palette[1]))
mdsquplot3 <- ggplot(mdsqupoints) +
geom_density(aes(MDS2, fill = Programme), alpha = 0.4) +
theme_pubr() +
theme(legend.position = "none", axis.title = element_text(size = 11)) +
fill_palette(palette = c(palette[3], palette[2], palette[1]))
blankPlot <- ggplot()+geom_blank(aes(1,1))+
theme(plot.background = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_blank(),
panel.background = element_blank(),
axis.title.x = element_blank(),
axis.title.y = element_blank(),
axis.text.x = element_blank(),
axis.text.y = element_blank(),
axis.ticks = element_blank())
pdf("Figures/Quartet MDS with density distribution A2019.pdf", 8, 5.3)
ggdraw() +
draw_plot(mdsquplot2, x = 0, y = 0.7, width = 0.7, height = 0.3) +
draw_plot(mdsquplot1, x = 0, y = 0, width = 0.7, height = 0.7) +
draw_plot(mdsquplot3, x = 0.7, y = 0, width = 0.3, height = 0.7) +
draw_plot_label(label = "A", x = 0, y = 0.98) +
draw_plot_label(label = "B", x = 0, y = 0.73) +
draw_plot_label(label = "C", x = 0.7, y = 0.73)
dev.off()
##### Evans et al, 2014 #####
setwd("~/Documents/Imperial/Morphological Character Hierarchies/Data/Evans et al, 2014/")
library(ape)
library(distory)
library(phangorn)
library(phytools)
library(paleotree)
library(dplyr)
library(Quartet)
library(dispRity)
library(rlist)
library(ggpubr)
# paup
pauptrees <- read.nexus("Pauptrees-E2014.tre")
paup <- read.nexus("Paupcontree-E2014.tre")
paup <- unroot(paup)
pauptrees <- list.take(pauptrees, 100)
pauptrees <- as.multiPhylo(pauptrees)
pauptrees <- unroot.multiPhylo(pauptrees)
# morphy
morphytrees <- read.nexus("Morphytrees-E2014.tre")
morphy <- read.nexus("Morphycontree-E2014.tre")
morphy <- unroot(morphy)
morphytrees <- as.multiPhylo(morphytrees)
morphytrees <- unroot.multiPhylo(morphytrees)
# anagallis
anatrees <- read.nexus("Anatrees-E2014.txt.nex")
ana <- consensus(anatrees)
ana <- unroot(ana)
anatrees <- as.multiPhylo(anatrees)
anatrees <- unroot.multiPhylo(anatrees)
contreelist <- c(paup, morphy, ana)
treeslist <- c(pauptrees, morphytrees, anatrees)
