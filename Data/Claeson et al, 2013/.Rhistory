TernaryPlot(point = "down") # point = up, down, right, le
TernaryPlot(alab = "Aness", blab = "Bness", clab = "Cness",
lab.col = c("red","blue","darkgreen"), # colour for axis and tick labels
lab.cex = 0.8, # axis label size
grid.minor.lines = 0, # how many minor ticks
grid.lty = "dashed", #  line type of grid lines
col = rgb(0.9,0.9,0.9), # colour fill for the plot
grid.col = "white", # colour of grid lines
axis.col = rgb(0.6,0.6,0.6), # colour of the border
ticks.col = rgb(0.6,0.6,0.6), # colour of ticks on the border
padding = 0.08) # internal margin of the plot
cols <- TernaryPointValues(rgb) # colour the background
ColourTernary(cols, spectrum = NULL)
data_points <- list( # add data points
R = c(255, 0, 0),
O = c(240, 180, 52),
Y = c(210, 222, 102),
G = c(111, 222, 16),
B = c(25, 160, 243),
I = c(92, 12, 243),
V = c(225, 24, 208)
)
AddToTernary(PlottingFunction = points, coordinates = data_points, pch = 21, cex=3,
bg=vapply(data_points, # colour the points in along a gradient or something
function (x) rgb(x[1], x[2], x[3], 128, maxColorValue=255),
character(1))
)
AddToTernary(text, data_points, names(data_points), font=2)
## chapter 3
eurodist
ordinatedmatrix <- cmdscale(eurodist, k=5)
View(ordinatedmatrix)
#### dipRity ####
library(dispRity)
data("BeckLee_mat50")
data("BeckLee_mat99")
head(BeckLee_mat50[, 1:5])
head(BeckLee_mat99[c(1,2,98,99), 1:5])
# loading a list of first and last occurrence dates for the fossils
data("BeckLee_ages")
head(BeckLee_ages)
# loading and plotting the phylogeny
data("BeckLee_tree")
plot(BeckLee_tree)
## chapter 4.2 customised subsets
mammalgroups <- crown.stem(BeckLee_tree, inc.nodes = F)
custom.subsets(BeckLee_mat50, group = mammalgroups)
# or assign elements to different groups
weirdgroups <- list("even" = seq(from = 1, to = 49, by = 2),
"odd" = seq(from = 2, to = 50, by = 2),
"all" = c(1:50))
View(weirdgroups)
## chapter 4.3 bootstraps and rarefaction
boot.matrix(data = BeckLee_mat50)
## chapter 4.3 bootstraps and rarefaction
boot.matrix(data = BeckLee_mat50)
## chapter 4.3 bootstraps and rarefaction
boot.matrix(data = BeckLee_mat99)
boot.matrix(BeckLee_mat50, boot.type = "single")
boot.matrix(BeckLee_mat50, dimensions = 0.5)
##### Claeson et al, 2013 #####
setwd("~/Documents/Imperial/Morphological Character Hierarchies/Data/Claeson et al, 2013/")
library(ape)
library(distory)
library(phangorn)
library(phytools)
library(paleotree)
library(dplyr)
library(Quartet)
library(dispRity)
library(rlist)
library(ggpubr)
# paup
pauptrees <- read.nexus("Paup-C2013.tre")
paup <- read.nexus("Paupcontree-C2013.tre")
paup <- unroot(paup)
pauptrees <- list.take(pauptrees, 100)
pauptrees <- as.multiPhylo(pauptrees)
pauptrees <- unroot.multiPhylo(pauptrees)
# morphy
morphytrees <- read.nexus("Morphy-C2013.tre")
morphy <- read.nexus("Morphycontree-C2013.tre")
morphy <- unroot(morphy)
morphytrees <- list.take(morphytrees, 100)
morphytrees <- as.multiPhylo(morphytrees)
morphytrees <- unroot.multiPhylo(morphytrees)
# anagallis
anatrees <- read.nexus("Anatrees-C2013.nex")
ana <- consensus(anatrees)
ana <- unroot(ana)
anatrees <- list.filter(anatrees, Nnode == 29)
anatrees <- as.multiPhylo(anatrees)
anatrees <- unroot.multiPhylo(anatrees)
contreelist <- c(paup, morphy, ana)
treeslist <- c(pauptrees, morphytrees, anatrees)
#### RF ####
rf <- sapply(treeslist, function(x)
sapply(treeslist, RF.dist, tree1=x))
colnames(rf) <- rownames(rf) <- c(paste("Paup", 1:length(pauptrees), sep = ""),
paste("Morphy", 1:length(morphytrees), sep = ""),
paste("Anagallis", 1:length(anatrees), sep = ""))
rf <- as.data.frame(rf)
# paup-paup
pprf <- rf[1:100, 1:100]
pprf <- as.matrix(pprf)
pprf <- as.vector(pprf)
pprfquartiles <- quantile(pprf)
pprfmedian <- pprfquartiles[3]
# paup morphy
pmrf <- rf[1:100, 101:200]
pmrf <- as.matrix(pmrf)
pmrf <- as.vector(pmrf)
# paup anagallis
parf <- rf[1:100, 201:292]
parf <- as.matrix(parf)
parf <- as.vector(parf)
# morphy anagallis
marf <- rf[101:200, 201:292]
marf <- as.matrix(marf)
marf <- as.vector(marf)
# median
rflist <- list(pmrf, parf, marf)
rfquartiles <- as.data.frame(sapply(rflist, quantile, na.rm = T))
colnames(rfquartiles) <- c("PAUP* vs Morphy", "PAUP* vs Anagallis", "Morphy vs Anagallis")
rfmedian <- rfquartiles[3,]
rfLQ <- rfquartiles[2,]
rfUQ <- rfquartiles[4,]
### normalise
random.comparisons.quantile <- function(number.tips, number.trees, difference.function) {
trees1 <- rmtree(number.trees, number.tips, br = NULL, rooted = F)
trees2 <- rmtree(number.trees, number.tips, br = NULL, rooted = F)
result <- quantile(unlist(mapply(difference.function, trees1, trees2, SIMPLIFY = F)))
return(result)
}
set.seed(12345)
randoRFquantile <- random.comparisons.quantile(Ntip(paup), 100, RF.dist)
randoRFmedian <- randoRFquantile[3]
randoRFLQ <- randoRFquantile[2]
randoRFUQ <- randoRFquantile[4]
normalisedRFmedian <- rfmedian/randoRFmedian
normalisedRFLQ <- rfLQ/randoRFLQ
normalisedRFUQ <- rfUQ/randoRFUQ
library(treespace)
library(rgl)
library(adegraphics)
library(adegenet)
a <- treespace(treeslist, method = "RF", nf = 3)
View(a)
a[["D"]]
table.image(a$D, nclass = 30)
plotGroves(a$pco)
plotGrovesD3(a$pco, treeNames = 1:292)
?hclust
b <- findGroves(treeslist, method = "RF", nf = 3, nclust = 3, clustering = "median")
View(b)
a[["pco"]][["eig"]]
medTree(treeslist)
medTree(treeslist, groups = 3)
plot3d(a$pco$li[,1],
a$pco$l1[,2],
a$pco$l1[,3])
View(rf)
library(vegan)
library(cowplot)
# programme column
paupnames <- c("PAUP*")
paupnames <- rep(paupnames, length(pauptrees))
morphynames <- c("Morphy")
morphynames <- rep(morphynames, length(morphytrees))
ananames <- c("Anagallis")
ananames <- rep(ananames, length(anatrees))
Programme <- c(paupnames, morphynames, ananames)
### RF
mdsrf <- metaMDS(rf, distance = "euclidean", trymax = 999)
View(mdsrf)
c <- pcoa(rf, correction = "cailliez")
View(c)
c[["vectors"]]
c1 <- as.data.frame(c$vectors)
plot3d(c1$Axis.1,
c1$Axis.2,
c1$Axis.3)
View(c1)
c2 <- c1[1:3,]
View(c2)
c2 <- c1[,1:3]
View(c2)
c3 <- colnames(c3) <- rownames(c3) <- c(paste("Paup", 1:length(pauptrees), sep = ""),
paste("Morphy", 1:length(morphytrees), sep = ""),
paste("Anagallis", 1:length(anatrees), sep = ""))
colnames(c2) <- rownames(c2) <- c(paste("Paup", 1:length(pauptrees), sep = ""),
paste("Morphy", 1:length(morphytrees), sep = ""),
paste("Anagallis", 1:length(anatrees), sep = ""))
c2 <- c1[,1:3]
colnames(c2) <- rownames(c2) <- c(paste("Paup", 1:length(pauptrees), sep = ""),
paste("Morphy", 1:length(morphytrees), sep = ""),
paste("Anagallis", 1:length(anatrees), sep = ""))
View(c2)
colnames(c2) <- c(paste("Paup", 1:length(pauptrees), sep = ""),
paste("Morphy", 1:length(morphytrees), sep = ""),
paste("Anagallis", 1:length(anatrees), sep = ""))
rownames(c2) <- c(paste("Paup", 1:length(pauptrees), sep = ""),
paste("Morphy", 1:length(morphytrees), sep = ""),
paste("Anagallis", 1:length(anatrees), sep = ""))
paupnames <- c("PAUP*")
paupnames <- rep(paupnames, length(pauptrees))
morphynames <- c("Morphy")
morphynames <- rep(morphynames, length(morphytrees))
ananames <- c("Anagallis")
ananames <- rep(ananames, length(anatrees))
Programme <- c(paupnames, morphynames, ananames)
c2 <- cbind(c2, Programme)
View(a)
colours <- fac2col(c2$Programme, col.pal = c("steelblue", "firebrick", "black"))
colours <- fac2col(c2$Programme, col.pal = funky)
plot3d(c2$Axis.1,
c2$Axis.2,
c2$Axis.3,
col = colours)
colours
plot3d(c2$Axis.1,
c2$Axis.2,
c2$Axis.3,
col = colours,
size = 5)
plot3d(c2$Axis.1,
c2$Axis.2,
c2$Axis.3,
col = colours,
size = 10)
plot3d(c2$Axis.1,
c2$Axis.2,
c2$Axis.3,
col = colours,
size = 10,
type = "s")
plot3d(c2$Axis.1,
c2$Axis.2,
c2$Axis.3,
col = colours,
size = 2,
type = "s")
##### Visualisation #####
palette <- wesanderson::wes_palette(name = "Chevalier1")
palette <- c(palette, "#25291C", "#E6E49F")
# PAUP* = palette[1]
# Morphy = palette[2]
# Anagallis = palette[3]
# PAUP* vs Morphy = palette[4]
# PAUP* vs Anagallis = palette[5]
# Morphy vs Anagallis = palette[6]
comparepalette <- c(palette[6], palette[5], palette[4])
colours <- fac2col(c2$Programme, col = comparepalette)
any2col(c2, col.pal = seasun)
colours <- any2col(c2, col.pal = seasun)
plot3d(c2$Axis.1,
c2$Axis.2,
c2$Axis.3,
col = colours,
size = 2,
type = "s")
View(colours)
colours <- any2col(c2, col.pal = seasun[1:3])
colours <- any2col(c2, col.pal = greenpal)
plot3d(c2$Axis.1,
c2$Axis.2,
c2$Axis.3,
col = colours,
size = 2,
type = "s")
colours <- fac2col(c2, col.pal = greenpal)
plot3d(c2$Axis.1,
c2$Axis.2,
c2$Axis.3,
col = colours,
size = 2,
type = "s")
colours <- fac2col(c2, col.pal = seasun)
plot3d(c2$Axis.1,
c2$Axis.2,
c2$Axis.3,
col = colours,
size = 2,
type = "s")
##### Claeson et al, 2013 #####
setwd("~/Documents/Imperial/Morphological Character Hierarchies/Data/Claeson et al, 2013/")
library(ape)
library(distory)
library(phangorn)
library(phytools)
library(paleotree)
library(dplyr)
library(Quartet)
library(dispRity)
library(rlist)
library(ggpubr)
# paup
pauptrees <- read.nexus("Paup-C2013.tre")
paup <- read.nexus("Paupcontree-C2013.tre")
paup <- unroot(paup)
pauptrees <- list.take(pauptrees, 100)
pauptrees <- as.multiPhylo(pauptrees)
pauptrees <- unroot.multiPhylo(pauptrees)
# morphy
morphytrees <- read.nexus("Morphy-C2013.tre")
morphy <- read.nexus("Morphycontree-C2013.tre")
morphy <- unroot(morphy)
morphytrees <- list.take(morphytrees, 100)
morphytrees <- as.multiPhylo(morphytrees)
morphytrees <- unroot.multiPhylo(morphytrees)
# anagallis
anatrees <- read.nexus("Anatrees-C2013.nex")
ana <- consensus(anatrees)
ana <- unroot(ana)
anatrees <- list.filter(anatrees, Nnode == 29)
anatrees <- as.multiPhylo(anatrees)
anatrees <- unroot.multiPhylo(anatrees)
contreelist <- c(paup, morphy, ana)
treeslist <- c(pauptrees, morphytrees, anatrees)
#### RF ####
rf <- sapply(treeslist, function(x)
sapply(treeslist, RF.dist, tree1=x))
colnames(rf) <- rownames(rf) <- c(paste("Paup", 1:length(pauptrees), sep = ""),
paste("Morphy", 1:length(morphytrees), sep = ""),
paste("Anagallis", 1:length(anatrees), sep = ""))
rf <- as.data.frame(rf)
# paup-paup
pprf <- rf[1:100, 1:100]
pprf <- as.matrix(pprf)
pprf <- as.vector(pprf)
pprfquartiles <- quantile(pprf)
pprfmedian <- pprfquartiles[3]
# morphy-morphy
mmrf <- rf[101:200, 101:200]
mmrf <- as.matrix(mmrf)
mmrf <- as.vector(mmrf)
mmrfquartiles <- quantile(mmrf)
mmrfmedian <- mmrfquartiles[3]
# ana-ana
aarf <- rf[201:292, 201:292]
aarf <- as.matrix(aarf)
aarf <- as.vector(aarf)
aarfquartiles <- quantile(aarf)
aarfmedian <- aarfquartiles[3]
# paup morphy
pmrf <- rf[1:100, 101:200]
pmrf <- as.matrix(pmrf)
pmrf <- as.vector(pmrf)
# paup anagallis
parf <- rf[1:100, 201:292]
parf <- as.matrix(parf)
parf <- as.vector(parf)
# morphy anagallis
marf <- rf[101:200, 201:292]
marf <- as.matrix(marf)
marf <- as.vector(marf)
# median
rflist <- list(pmrf, parf, marf)
rfquartiles <- as.data.frame(sapply(rflist, quantile, na.rm = T))
colnames(rfquartiles) <- c("PAUP* vs Morphy", "PAUP* vs Anagallis", "Morphy vs Anagallis")
rfmedian <- rfquartiles[3,]
rfLQ <- rfquartiles[2,]
rfUQ <- rfquartiles[4,]
### normalise
random.comparisons.quantile <- function(number.tips, number.trees, difference.function) {
trees1 <- rmtree(number.trees, number.tips, br = NULL, rooted = F)
trees2 <- rmtree(number.trees, number.tips, br = NULL, rooted = F)
result <- quantile(unlist(mapply(difference.function, trees1, trees2, SIMPLIFY = F)))
return(result)
}
set.seed(12345)
randoRFquantile <- random.comparisons.quantile(Ntip(paup), 100, RF.dist)
randoRFmedian <- randoRFquantile[3]
randoRFLQ <- randoRFquantile[2]
randoRFUQ <- randoRFquantile[4]
normalisedRFmedian <- rfmedian/randoRFmedian
normalisedRFLQ <- rfLQ/randoRFLQ
normalisedRFUQ <- rfUQ/randoRFUQ
#### Quartet ####
qu <- sapply(treeslist, function(x)
sapply(treeslist, QuartetPoints, cf=x))
qu1 <- as.data.frame(qu)
quartets <- c("Unresolved", "Contradicted", "Consistent")
quartets <- rep(quartets, length(qu1))
qu2 <- cbind(quartets, qu1)
qu3 <- subset(qu2, quartets == "Contradicted")
qu3 <- qu3[,2:ncol(qu3)]
colnames(qu3) <- rownames(qu3) <- c(paste("Paup", 1:length(pauptrees), sep = ""),
paste("Morphy", 1:length(morphytrees), sep = ""),
paste("Anagallis", 1:length(anatrees), sep = ""))
qu3 <- as.data.frame(qu3)
qu4 <- data.matrix(qu3)
# paup-paup
ppqu <- qu4[1:100, 1:100]
ppqu <- as.matrix(ppqu)
ppqu <- as.vector(ppqu)
ppququartiles <- quantile(ppqu)
ppqumedian <- ppququartiles[3]
# morphy-morphy
mmqu <- qu4[101:200, 101:200]
mmqu <- as.matrix(mmqu)
mmqu <- as.vector(mmqu)
mmququartiles <- quantile(mmqu)
mmqumedian <- mmququartiles[3]
# ana-ana
aaqu <- qu4[201:292, 201:292]
aaqu <- as.matrix(aaqu)
aaqu <- as.vector(aaqu)
aaququartiles <- quantile(aaqu)
aaqumedian <- aaququartiles[3]
# paup-morphy
pmqu <- qu4[1:100, 101:200]
pmqu <- as.matrix(pmqu)
pmqu <- as.vector(pmqu)
pmququartiles <- quantile(pmqu)
# paup-anagallis
paqu <- qu4[1:100, 201:292]
paqu <- as.matrix(paqu)
paqu <- as.vector(paqu)
paququartiles <- quantile(paqu)
# morphy-anagallis
maqu <- qu4[101:200, 201:292]
maqu <- as.matrix(maqu)
maqu <- as.vector(maqu)
maququartiles <- quantile(maqu)
# median and quartiles
qulist <- list(pmqu, paqu, maqu)
ququartiles <- as.data.frame(sapply(qulist, quantile, na.rm = T))
colnames(ququartiles) <- c("PAUP* vs Morphy", "PAUP* vs Anagallis", "Morphy vs Anagallis")
qumedian <- ququartiles[3,]
quLQ <- ququartiles[2,]
quUQ <- ququartiles[4,]
### normalise
random.Q.quantile <- function(number.tips, number.trees, difference.function) {
trees1 <- rmtree(number.trees, number.tips, br = NULL, rooted = F)
trees2 <- rmtree(number.trees, number.tips, br = NULL, rooted = F)
result <- mapply(difference.function, trees1, trees2, SIMPLIFY = F)
result <- bind_rows(result)
result <- sapply(result, quantile)
return(result)
}
set.seed(12345)
randoQquantile <- random.Q.quantile(Ntip(paup), 100, QuartetPoints)
randoQquantile <- randoQquantile[,2]
randoQmedian <- randoQquantile[3]
randoQLQ <- randoQquantile[2]
randoQUQ <- randoQquantile[4]
normalisedQmedian <- qumedian/randoQmedian
normalisedQLQ <- quLQ/randoQLQ
normalisedQUQ <- quUQ/randoQUQ
##### Visualisation #####
palette <- wesanderson::wes_palette(name = "Chevalier1")
palette <- c(palette, "#25291C", "#E6E49F")
# PAUP* = palette[1]
# Morphy = palette[2]
# Anagallis = palette[3]
# PAUP* vs Morphy = palette[4]
# PAUP* vs Anagallis = palette[5]
# Morphy vs Anagallis = palette[6]
comparepalette <- c(palette[6], palette[5], palette[4])
library(vegan)
library(cowplot)
# programme column
paupnames <- c("PAUP*")
paupnames <- rep(paupnames, length(pauptrees))
morphynames <- c("Morphy")
morphynames <- rep(morphynames, length(morphytrees))
ananames <- c("Anagallis")
ananames <- rep(ananames, length(anatrees))
Programme <- c(paupnames, morphynames, ananames)
mdsrf <- metaMDS(rf, distance = "euclidean", trymax = 999)
stressplot(mdsrf)
mdsrfpoints <- as.data.frame(mdsrf$points)
mdsrfpoints <- cbind(mdsrfpoints, Programme)
mdsqu <- metaMDS(qu4, distance = "euclidean", trymax = 999)
stressplot(mdsqu)
mdsqupoints <- as.data.frame(mdsqu$points)
mdsqupoints <- cbind(mdsqupoints, Programme)
anosim(rf, grouping = Programme)
anosim(rf, grouping = Programme, distance = "euclidean")
anosim(mdsrfpoints, grouping = mdsrfpoints$Programme)
anosim(mdsrfpoints, grouping = mdsrfpoints$Programme, distance = "euclidean")
a <- anosim(rf, grouping = Programme, distance = "euclidean")
plot(a)
View(a)
a[["dis.rank"]]
a[["class.vec"]]
ks.test(pprf, mmrf)
a$class.vec[[1]]
a$class.vec[1]
a$class.vec[[[1]]
a$class.vec[[2]]
str(a$class.vec)
str(a$dis.rank)
str(a$dissimilarity)
b <- subset(a$class.vec == "Anagallis")
b <- subset(x = a$class.vec == "Anagallis")
b <- subset(x = a$class.vec = "Anagallis")
str(a$class.vec)
b <- subset(x = a, class.vec == "Anagallis")
b <- subset(x = a, a$class.vec == "Anagallis")
View(b)
str(b)
str(a$class.vec)
str(a$dis.rank)
a[["class.vec"]]
b <- cbind(a$class.vec, a$dis.rank)
View(b)
str(a$class.vec)
ks.test(pprfmedian, mmrfmedian)
pprfmedian
mmrfmedian
