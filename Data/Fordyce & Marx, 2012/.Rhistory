#### SPR #### do with resolved trees
SPR.dist(paup1, morphy)
SPR.dist(paup1, ana1)
SPR.dist(morphy, ana1)
sprdist(morphy,ana5)
spr.dist(morphy,ana5)
SPR.dist(morphy,ana5)
plot.phylo(ana5, type = "cladogram")
plot.phylo(ana3, type = "cladogram")
comparePhylo(ana5, ana3, type = "cladogram")
comparePhylo(ana5, ana3)
phylo.diff(ana5, ana3)
SPR.dist(morphy, ana)
SPR.dist(paup10, ana1)
SPR.dist(paup5, ana1)
SPR.dist(paup5, ana3)
# list then average
pmtd1[1]
# list then average
pmtd1[2]
paspr1
maspr1
path.dist(morphy, ana1)
path.dist(paup1, ana1)
papd1 <- path.dist(paup1,ana1)
#### Maximum shared subtree #### do with resolved trees
pm <- mast(paup, morphy, rooted = F, tree = T)
plot(pm)
# paup vs morphy
pmms1 <- mast(paup1,morphy)
pmms2 <- mast(paup1,morphy)
plot(pmms1)
plot(pmms1)
plot(pmms2)
pmms2 <- mast(paup1,morphy, rooted = F)
plot(pmms1)
plot(pmms2)
# paup vs morphy
pmms1 <- mast(paup1, morphy, rooted = F)
pmms2 <- mast(paup2, morphy, rooted = F)
pmms3 <- mast(paup3, morphy, rooted = F)
pmms4 <- mast(paup4, morphy, rooted = F)
pmms5 <- mast(paup5, morphy, rooted = F)
pmms6 <- mast(paup6, morphy, rooted = F)
pmms7 <- mast(paup7, morphy, rooted = F)
pmms8 <- mast(paup8, morphy, rooted = F)
pmms9 <- mast(paup9, morphy, rooted = F)
pmms10 <- mast(paup10, morphy, rooted = F)
plot(pmms1)
plot(pmms2)
pmmstrees <- c(pmms1,pmms2,pmms3,pmms4,pmms5,pmms6,pmms7,pmms8,pmms9,pmms10)
pmms <- consensus(pmmstrees)
plot(pmmstrees)
#### Maximum shared subtree #### do with resolved trees? Then plot consensus?
# unresolved trees
pmmast <- mast(paup, morphy, rooted = F)
plot.phylo(pmmast, type="cladogram")
pamast <- mast(paup, ana, rooted = F)
plot.phylo(pamast, type = "cladogram")
mamast <- mast(morphy, ana, rooted = F)
plot.phylo(mamast, type = "cladogram")
comparePhylo(pmmast, pamast)
phylo.diff(pmmast, pamast)
phylo.diff(pmmast, mamast)
phylo.diff(pamast, mamast)
treedist(paup,morphy)
treedist(paup1,morphy)
treePop(ana)
SPR.dist(paup,morphy)
path.dist(paup,morphy)
path.dist(paup1,morphy)
path.dist(paup2,morphy)
pmtd1 <- treedist(paup1,morphy)
pmtd2 <- treedist(paup2,morphy)
pmtd3 <- treedist(paup3,morphy)
pmtd4 <- treedist(paup4,morphy)
pmtd5 <- treedist(paup5,morphy)
pmtd6 <- treedist(paup6,morphy)
pmtd7 <- treedist(paup7,morphy)
pmtd8 <- treedist(paup8,morphy)
pmtd9 <- treedist(paup9,morphy)
pmtd10 <- treedist(paup10,morphy)
pmspr1 <- SPR.dist(paup1,morphy)
pmspr2 <- SPR.dist(paup2,morphy)
pmspr3 <- SPR.dist(paup3,morphy)
pmspr4 <- SPR.dist(paup4,morphy)
pmspr5 <- SPR.dist(paup5,morphy)
pmspr6 <- SPR.dist(paup6,morphy)
pmspr7 <- SPR.dist(paup7,morphy)
pmspr8 <- SPR.dist(paup8,morphy)
pmspr9 <- SPR.dist(paup9,morphy)
pmspr10 <- SPR.dist(paup10,morphy)
pmspr <- c(pmspr1,pmspr2,pmspr3,pmspr4,pmspr5,pmspr6,pmspr7,pmspr8,pmspr9,pmspr10)
pmsprtrees <- c(pmspr1,pmspr2,pmspr3,pmspr4,pmspr5,pmspr6,pmspr7,pmspr8,pmspr9,pmspr10)
pmspr <- mean(pmsprtrees)
pasprtrees <- c(paspr1,paspr2,paspr3,paspr4,paspr5,paspr6,paspr7,paspr8,paspr9,paspr10)
paspr <- mean(pasprtrees)
paspr1 <- SPR.dist(paup1,ana1)
paspr2 <- SPR.dist(paup2,ana2)
paspr3 <- SPR.dist(paup3,ana3)
paspr4 <- SPR.dist(paup4,ana4)
paspr5 <- SPR.dist(paup5,ana5)
paspr6 <- SPR.dist(paup6,ana6)
paspr7 <- SPR.dist(paup7,ana7)
paspr8 <- SPR.dist(paup8,ana8)
paspr9 <- SPR.dist(paup9,ana9)
paspr10 <- SPR.dist(paup10,ana10)
pasprtrees <- c(paspr1,paspr2,paspr3,paspr4,paspr5,paspr6,paspr7,paspr8,paspr9,paspr10)
paspr <- mean(pasprtrees)
maspr1 <- SPR.dist(morphy,ana1)
maspr2 <- SPR.dist(morphy,ana2)
maspr3 <- SPR.dist(morphy,ana3)
maspr4 <- SPR.dist(morphy,ana4)
maspr5 <- SPR.dist(morphy,ana5)
maspr6 <- SPR.dist(morphy,ana6)
maspr7 <- SPR.dist(morphy,ana7)
maspr8 <- SPR.dist(morphy,ana8)
maspr9 <- SPR.dist(morphy,ana9)
maspr10 <- SPR.dist(morphy,ana10)
masprtrees <- c(maspr1,maspr2,maspr3,maspr4,maspr5,maspr6,maspr7,maspr8,maspr9,maspr10)
maspr <- mean(masprtrees)
spr <- lapply(masprtrees, mean)
sprtrees <- c(pmsprtrees,pasprtrees,masprtrees)
spr <- lapply(sprtrees, mean)
spr <- sapply(sprtrees, mean)
pmpd1 <- path.dist(paup1,morphy)
pmpd2 <- path.dist(paup2,morphy)
pmpd3 <- path.dist(paup3,morphy)
pmpd4 <- path.dist(paup4,morphy)
pmpd5 <- path.dist(paup5,morphy)
pmpd6 <- path.dist(paup6,morphy)
pmpd7 <- path.dist(paup7,morphy)
pmpd8 <- path.dist(paup8,morphy)
pmpd9 <- path.dist(paup9,morphy)
pmpd10 <- path.dist(paup10,morphy)
pmpdtrees <- c(pmpd1,pmpd2,pmpd3,pmpd4,pmpd5,pmpd6,pmpd7,pmpd8,pmpd9,pmpd10)
pmpd <- mean(pmpdtrees)
papdtrees <- c(papd1,papd2,papd3,papd4,papd5,papd6,papd7,papd8,papd9,papd10)
papd <- mean(papdtrees)
papd1 <- path.dist(paup1,ana1)
papd2 <- path.dist(paup2,ana2)
papd3 <- path.dist(paup3,ana3)
papd4 <- path.dist(paup4,ana4)
papd5 <- path.dist(paup5,ana5)
papd6 <- path.dist(paup6,ana6)
papd7 <- path.dist(paup7,ana7)
papd8 <- path.dist(paup8,ana8)
papd9 <- path.dist(paup9,ana9)
papd10 <- path.dist(paup10,ana10)
papdtrees <- c(papd1,papd2,papd3,papd4,papd5,papd6,papd7,papd8,papd9,papd10)
papd <- mean(papdtrees)
mapdtrees <- c(mapd1,mapd2,mapd3,mapd4,mapd5,mapd6,mapd7,mapd8,mapd9,mapd10)
mapd <- mean(mapdtrees)
mapd1 <- path.dist(morphy,ana1)
mapd2 <- path.dist(morphy,ana2)
mapd3 <- path.dist(morphy,ana3)
mapd4 <- path.dist(morphy,ana4)
mapd5 <- path.dist(morphy,ana5)
mapd6 <- path.dist(morphy,ana6)
mapd7 <- path.dist(morphy,ana7)
mapd8 <- path.dist(morphy,ana8)
mapd9 <- path.dist(morphy,ana9)
mapd10 <- path.dist(morphy,ana10)
mapdtrees <- c(mapd1,mapd2,mapd3,mapd4,mapd5,mapd6,mapd7,mapd8,mapd9,mapd10)
mapd <- mean(mapdtrees)
pmtd1 <- treedist(paup1,morphy)
pmtd2 <- treedist(paup2,morphy)
pmtd3 <- treedist(paup3,morphy)
pmtd4 <- treedist(paup4,morphy)
pmtd5 <- treedist(paup5,morphy)
pmtd6 <- treedist(paup6,morphy)
pmtd7 <- treedist(paup7,morphy)
pmtd8 <- treedist(paup8,morphy)
pmtd9 <- treedist(paup9,morphy)
pmtd10 <- treedist(paup10,morphy)
pmtdtrees <- c(pmtd1,pmtd2,pmtd3,pmtd4,pmtd5,pmtd6,pmtd7,pmtd8,pmtd9,pmtd10)
treedist(paup1,morphy)
rf10 <- multiRF(resolved10)
resolved1 <- c(paup1, morphy, ana1)
resolved2 <- c(paup2, morphy, ana2)
resolved3 <- c(paup3, morphy, ana3)
resolved4 <- c(paup4, morphy, ana4)
resolved5 <- c(paup5, morphy, ana5)
resolved6 <- c(paup6, morphy, ana6)
resolved7 <- c(paup7, morphy, ana7)
resolved8 <- c(paup8, morphy, ana8)
resolved9 <- c(paup9, morphy, ana9)
resolved10 <- c(paup10, morphy, ana10)
rf10 <- multiRF(resolved10)
as.data.frame(pmtd1)
#### treedist #### requires resolved trees
# paup vs morphy
pmtd1 <- as.data.frame(treedist(paup1,morphy))
#### treedist #### requires resolved trees
# paup vs morphy
pmtd1 <- as.data(treedist(paup1,morphy))
View(pmtd1)
as.data.frame.character(pmtd2)
#### treedist #### requires resolved trees
# paup vs morphy
pmtd1 <- as.data.frame.character(treedist(paup1,morphy))
as.matrix(pmtd2)
#### treedist #### requires resolved trees
# paup vs morphy
pmtd1 <- treedist(paup1,morphy)
#### treedist #### requires resolved trees
# paup vs morphy
pmtd1 <- treedist(paup1,morphy)
colnames(pmtd1) <- c("pmtd1")
t(pmtd1)
#### treedist #### requires resolved trees
# paup vs morphy
pmtd1 <- t(treedist(paup1,morphy))
colnames(pmtd1) <- c("symmetric distance", "path difference")
pmtd1 <- as.data.frame(pmtd1)
View(pmtd1)
pmtd2 <- t(treedist(paup2,morphy))
colnames(pmtd2) <- c("symmetric distance", "path difference")
pmtd2 <- as.data.frame(pmtd2)
rbind(pmtd1,pmtd2)
rbind(pmtd3, pmtd4)
rbind(pmtdtrees)
rbind(pmtd3,pmtd4,pmtd5,pmtd6,pmtd7,pmtd8,pmtd9,pmtd10)
pmtd1 <- treedist(paup1,morphy)
pmtd2 <- treedist(paup2,morphy)
pmtd3 <- treedist(paup3,morphy)
pmtd4 <- treedist(paup4,morphy)
pmtd5 <- treedist(paup5,morphy)
pmtd6 <- treedist(paup6,morphy)
pmtd7 <- treedist(paup7,morphy)
pmtd8 <- treedist(paup8,morphy)
pmtd9 <- treedist(paup9,morphy)
pmtd10 <- treedist(paup10,morphy)
rbind(pmtd1,pmtd2,pmtd3,pmtd4,pmtd5,pmtd6,pmtd7,pmtd8,pmtd9,pmtd10)
pmtd <- rbind(pmtd1,pmtd2,pmtd3,pmtd4,pmtd5,pmtd6,pmtd7,pmtd8,pmtd9,pmtd10)
pmtd <- tapply(pmtd, c(symmetric.difference, path.difference), mean)
pmtd <- rbind(pmtd1,pmtd2,pmtd3,pmtd4,pmtd5,pmtd6,pmtd7,pmtd8,pmtd9,pmtd10)
pmtd
pmtd <- as.data.frame(rbind(pmtd1,pmtd2,pmtd3,pmtd4,pmtd5,pmtd6,pmtd7,pmtd8,pmtd9,pmtd10))
pmtd <- tapply(pmtd, c(pmtd$symmetric.difference, pmtd$path.difference), mean)
View(pmtd)
mean(pmtd$symmetric.difference)
mean(pmtd$path.difference)
pmtd <- tapply(pmtd, c(pmtd$symmetric.difference, pmtd$path.difference), mean)
is.atomic(pmtd)
pmtd <- tapply(pmtd, list(pmtd$symmetric.difference, pmtd$path.difference), mean)
pmtd <- tapply(pmtd, list(pmtd$symmetric.difference, pmtd$path.difference), mean)
pmtd[,1]
pmtd[,2]
pmtd <- as.data.frame(rbind(pmtd1,pmtd2,pmtd3,pmtd4,pmtd5,pmtd6,pmtd7,pmtd8,pmtd9,pmtd10))
pmtd <- tapply(pmtd, list(pmtd$symmetric.difference, pmtd$path.difference), mean)
pmtd
pmtd[1,1]
pmtd[0,1]
pmtd[1,0]
pmtd[0,0]
is.recursive(pmtd)
pmtd <- as.data.frame.array(rbind(pmtd1,pmtd2,pmtd3,pmtd4,pmtd5,pmtd6,pmtd7,pmtd8,pmtd9,pmtd10))
pmtd <- tapply(pmtd, list(pmtd$symmetric.difference, pmtd$path.difference), mean)
pmtd <- rbind(pmtd1,pmtd2,pmtd3,pmtd4,pmtd5,pmtd6,pmtd7,pmtd8,pmtd9,pmtd10)
pmtd <- tapply(pmtd, list(pmtd$symmetric.difference, pmtd$path.difference), mean)
pmtd <- tapply(pmtd, list(symmetric.difference, path.difference), mean)
pmtd <- tapply(pmtd, list(path.difference), mean)
pmtd
pmtd <- tapply(pmtd, list(symmetric.difference), mean)
setwd("~/Documents/Imperial/Microbiome/Practical/Data")
d <- read.csv("Data/microbiome.csv")
setwd("~/Documents/Imperial/Microbiome/Practical/")
d <- read.csv("Data/microbiome.csv")
nrow(d)
ncol(d)
# we want to know if a treatment reduces diversity (ie OTU richness)
# calculate mean richness of each treatment at the 2 levels of liming
tapply(X = richness, INDEX = list(d$Cide, d$Liming), FUN = mean) # a table of mean richness of each pesticide treatment at 2 levels of liming
# take rowSums of the binary matrix to calculate species richness
# each row is a sample with a certain permutation of the treatments
richness <- rowSums(d.OTU.binary)
d[1:10, 1:20]
d[1:10, (ncol(d)-10):ncol(d)]
d.OTU <- d[,7:ncol(d)]
OTU.abundance <- colSums(d.OTU)
OTU.abundance
plot(OTU.abundance)
plot(sort(OTU.abundance), log = "y")
# some of the OTUs have an abundance of 0 -> they do not exist!
zero.OTU <- which(OTU.abundance==0) # which OTUs have an abundance of 0
zero.OTU
# remove the OTUs with an abundance of 0
d.OTU <- d.OTU[,-zero.OTU]
# check that the OTUs with an abundance of 0 have been removed
which(colSums(d.OTU)==0)
# none leftover
OTU.abundance <- colSums(d.OTU)
plot(OTU.abundance)
plot(sort(OTU.abundance), log = "y")
hist(log10(OTU.abundance),
xlab = "log10(OTU Abunandance)",
ylab = "Frequency",
ylim = c(0,2000))
# y-axis = number of OTUs that are in each of the abundance bins along the x-axis
rowSums(d.OTU) # number of sequences obtained from each sample
# all are ~5000 because we
##### Alpha diversity
# calculate OTU richness by first converting the OTU matrix into presence or absence
d.OTU.binary <- replace(d.OTU, d.OTU>=1,1)
# take rowSums of the binary matrix to calculate species richness
# each row is a sample with a certain permutation of the treatments
richness <- rowSums(d.OTU.binary)
# we want to know if a treatment reduces diversity (ie OTU richness)
# calculate mean richness of each treatment at the 2 levels of liming
tapply(X = richness, INDEX = list(d$Cide, d$Liming), FUN = mean) # a table of mean richness of each pesticide treatment at 2 levels of liming
richness # this is like a table of richness for each sample
pmtd <- rbind(pmtd1,pmtd2,pmtd3,pmtd4,pmtd5,pmtd6,pmtd7,pmtd8,pmtd9,pmtd10)
pmtd <- c(pmtd1,pmtd2,pmtd3,pmtd4,pmtd5,pmtd6,pmtd7,pmtd8,pmtd9,pmtd10)
pmtd
pmtd <- tapply(pmtd, list(path.difference, symmetric.differenece), mean)
richness # this is like a table of richness for each sample
pmtd <- rbind(pmtd1,pmtd2,pmtd3,pmtd4,pmtd5,pmtd6,pmtd7,pmtd8,pmtd9,pmtd10)
##### Microbiome Practical
library(vegan)
setwd("~/Documents/Imperial/Microbiome/Practical")
d <- read.csv("Data/microbiome.csv")
##### Microbiome Practical
library(vegan)
d <- read.csv("Data/microbiome.csv")
View(d)
nrow(d)
ncol(d)
##### Exploring the data
colnames(d)[1:40]
d[1:10, 1:20]
d[1:10, (ncol(d)-10):ncol(d)]
d.OTU <- d[,7:ncol(d)]
View(d.OTU)
OTU.abundance <- colSums(d.OTU)
OTU.abundance
plot(OTU.abundance)
plot(sort(OTU.abundance), log = "y")
# some of the OTUs have an abundance of 0 -> they do not exist!
zero.OTU <- which(OTU.abundance==0) # which OTUs have an abundance of 0
zero.OTU
# remove the OTUs with an abundance of 0
d.OTU <- d.OTU[,-zero.OTU]
# check that the OTUs with an abundance of 0 have been removed
which(colSums(d.OTU)==0)
# none leftover
OTU.abundance <- colSums(d.OTU)
plot(OTU.abundance)
plot(sort(OTU.abundance), log = "y")
hist(log10(OTU.abundance),
xlab = "log10(OTU Abunandance)",
ylab = "Frequency",
ylim = c(0,2000))
rowSums(d.OTU) # number of sequences obtained from each sample
##### Alpha diversity
# calculate OTU richness by first converting the OTU matrix into presence or absence
d.OTU.binary <- replace(d.OTU, d.OTU>=1,1)
##### Alpha diversity
# calculate OTU richness by first converting the OTU matrix into presence or absence
d.OTU.binary <- replace(d.OTU, d.OTU>=1,1)
View(d.OTU.binary)
# take rowSums of the binary matrix to calculate species richness
# each row is a sample with a certain permutation of the treatments
richness <- rowSums(d.OTU.binary)
richness # this is like a table of richness for each sample
# vegan package can do this quickly without running separate commands to convert the OTU matrix
specnumber(d.OTU)
# we want to know if a treatment reduces diversity (ie OTU richness)
# calculate mean richness of each treatment at the 2 levels of liming
tapply(X = richness, INDEX = list(d$Cide, d$Liming), FUN = mean) # a table of mean richness of each pesticide treatment at 2 levels of liming
# mean richness calculated is across all depths
table1 <- tapply(X = richness, INDEX = list(d$Cide, d$Liming), FUN = mean)
# does richness differ among the treatments? Plot mean richness by liming
# how does richness change with the interaction between liming and pesticide?
interaction.plot(
x.factor = d$Liming, # x-axis
trace.factor = d$Cide, # separate plots by cide
response = richness, # y-axis
xlab = "Liming",
ylab = "Mean richness/OTUs",
legend = F
) # plots what we calculated above with tapply
legend("topright",
legend = c("Molluscicide", "Insecticide", "Control"),
lty = c(1:3),
title = "Pesticide Treatment",
bty = "n")
# separate mean richness by depth
table2 <- tapply(X = richness, INDEX = list(d$Cide, d$Liming, d$Depth), FUN = mean) # tables for richness of each pesticide treatments at each depth
# do cide, liming and depth influence richness?
lm.richness <- lm(richness ~ d$Cide*d$Liming*d$Depth) # create a linear model that proposes cide, liming and depth as reasons for the variation we see
# plot the interaction between liming and depth
# mean for each depth does not take pesticide into account
par(mfrow = c(1,1), mar = c(5, 4, 0.6, 0.5))
interaction.plot(
x.factor = d$Liming,
trace.factor = d$Depth,
response = richness,
xlab = "Liming",
ylab = "Mean richness/OTUs",
lty = c(1:5),
legend = F
) # uses mean richness calculated above with tapply
legend(
"topright",
legend = c("D1", "D2", "D3", "D4", "D5"),
lty = c(1:5),
title = "Depth",
bty = "n"
)
# vegan package can calculate diversity indices
d.simpson <- diversity(d.OTU, index = "simpson")
d.simpson # produces the probability that two randomly selected sequences from the same sample are of the same taxa
# prints out probability for each treatment
# to see which sample the probability relates to use cbind
cbind(d[,1:3],d.simpson)
### is Simpson diversity influenced by the same factors as OTU richness?
table3 <- tapply(X = d.simpson, INDEX = list(d$Cide, d$Liming, d$Depth), FUN = mean) # use this table or the cbind one for report
lm.simpson <- lm(d.simpson ~ d$Cide*d$Liming*d$Depth)
# liming highly significantly contributes to variation in simpson diversity
# interaction between liming and depth contributes significantly to simpson diversity
# depth by itself does not contribute significantly to variance
par(mfrow = c(1,1), mar = c(5, 4, 0.6, 0.5))
interaction.plot(
x.factor = d$Liming,
trace.factor = d$Depth,
response = d.simpson,
xlab = "Liming",
ylab = "Mean Simpson diversity",
lty = c(1:5),
trace.label = "Depth",
legend = F
)
legend(
"topright",
legend = c("D1", "D2", "D3", "D4", "D5"),
lty = c(1:5),
title = "Depth",
bty = "n"
)
OTU.mds <- metaMDS(d.OTU, trymax = 999)
View(OTU.mds)
View(d.OTU)
#### dipRity ####
library(dispRity)
mammal_groups <- crown.stem(BeckLee_tree, inc.nodes = F)
setwd("/Library/Frameworks/R.framework/Versions/3.6/Resources/library/dispRity/data")
mammal_groups <- crown.stem("BeckLee_tree.rda", inc.nodes = F)
setwd("~/Documents/Imperial/Morphological Character Hierarchies/Data/Fordyce & Marx, 2012")
setwd("~/Documents/Imperial/Morphological Character Hierarchies/Data/Fordyce & Marx, 2012/")
library(ape)
library(distory)
library(phangorn)
library(phytools)
library(paleotree)
library(dplyr)
library(Quartet)
library(dispRity)
library(rlist)
library(ggpubr)
# paup
pauptrees <- read.nexus("Pauptrees-FM2012.tre")
paup <- read.nexus("Paupcontree-FM2012.tre")
paup <- unroot(paup)
pauptrees <- as.multiPhylo(pauptrees)
pauptrees <- unroot.multiPhylo(pauptrees)
# morphy
morphytrees <- read.nexus("Morphytrees-FM2012.tre")
morphy <- read.nexus("Morphycontree-FM2020.tre")
morphy <- unroot(morphy)
morphytrees <- as.multiPhylo(morphytrees)
morphytrees <- unroot.multiPhylo(morphytrees)
# anagallis
anatrees <- read.nexus("Anatrees-FM2012.txt.nex")
ana <- consensus(anatrees)
ana <- unroot(ana)
anatrees <- as.multiPhylo(anatrees)
anatrees <- unroot.multiPhylo(anatrees)
contreelist <- c(paup, morphy, ana)
treeslist <- c(pauptrees, morphytrees, anatrees)
setwd("~/Documents/Imperial/Morphological Character Hierarchies/Data/Fordyce & Marx, 2012/")
library(ape)
library(distory)
library(phangorn)
library(phytools)
library(paleotree)
library(dplyr)
library(Quartet)
library(dispRity)
library(rlist)
library(ggpubr)
# paup
pauptrees <- read.nexus("Pauptrees-FM2012.tre")
paup <- read.nexus("Paupcontree-FM2012.tre")
paup <- unroot(paup)
pauptrees <- as.multiPhylo(pauptrees)
pauptrees <- unroot.multiPhylo(pauptrees)
# morphy
morphytrees <- read.nexus("Morphytrees-FM2012.tre")
morphy <- read.nexus("Morphycontree-FM2020.tre")
morphy <- unroot(morphy)
morphytrees <- as.multiPhylo(morphytrees)
morphytrees <- unroot.multiPhylo(morphytrees)
# anagallis
anatrees <- read.nexus("Anatrees-FM2012.txt.nex")
ana <- consensus(anatrees)
ana <- unroot(ana)
anatrees <- as.multiPhylo(anatrees)
anatrees <- unroot.multiPhylo(anatrees)
contreelist <- c(paup, morphy, ana)
treeslist <- c(pauptrees, morphytrees, anatrees)
comparePhylo(morphy, ana)
