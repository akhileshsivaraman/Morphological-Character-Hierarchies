rf <- as.data.frame(rf)
# paup-paup
pprf <- rf[1:100, 1:100]
pprf <- as.matrix(pprf)
pprf <- as.vector(pprf)
pprfquartiles <- quantile(pprf)
pprfmedian <- pprfquartiles[3]
# paup morphy
pmrf <- rf[1:100, 101:200]
pmrf <- as.matrix(pmrf)
pmrf <- as.vector(pmrf)
# paup anagallis
parf <- rf[1:100, 201:260]
parf <- as.matrix(parf)
parf <- as.vector(parf)
# morphy anagallis
marf <- rf[101:200, 201:260]
marf <- as.matrix(marf)
marf <- as.vector(marf)
# median
rflist <- list(pmrf, parf, marf)
rfquartiles <- as.data.frame(sapply(rflist, quantile, na.rm = T))
colnames(rfquartiles) <- c("PAUP* vs Morphy", "PAUP* vs Anagallis", "Morphy vs Anagallis")
rfmedian <- rfquartiles[3,]
rfLQ <- rfquartiles[2,]
rfUQ <- rfquartiles[4,]
### normalise
random.comparisons.quantile <- function(number.tips, number.trees, difference.function) {
trees1 <- rmtree(number.trees, number.tips, br = NULL, rooted = F)
trees2 <- rmtree(number.trees, number.tips, br = NULL, rooted = F)
result <- quantile(unlist(mapply(difference.function, trees1, trees2, SIMPLIFY = F)))
return(result)
}
set.seed(12345)
randoRFquantile <- random.comparisons.quantile(Ntip(paup), 100, RF.dist)
randoRFmedian <- randoRFquantile[3]
randoRFLQ <- randoRFquantile[2]
randoRFUQ <- randoRFquantile[4]
normalisedRFmedian <- rfmedian/randoRFmedian
normalisedRFLQ <- rfLQ/randoRFLQ
normalisedRFUQ <- rfUQ/randoRFUQ
#### Quartet ####
qu <- sapply(treeslist, function(x)
sapply(treeslist, QuartetPoints, cf=x))
qu1 <- as.data.frame(qu)
quartets <- c("Unresolved", "Contradicted", "Consistent")
quartets <- rep(quartets, length(qu1))
qu2 <- cbind(quartets, qu1)
qu3 <- subset(qu2, quartets == "Contradicted")
qu3 <- qu3[,2:ncol(qu3)]
colnames(qu3) <- rownames(qu3) <- c(paste("Paup", 1:length(pauptrees), sep = ""),
paste("Morphy", 1:length(morphytrees), sep = ""),
paste("Anagallis", 1:length(anatrees), sep = ""))
qu3 <- as.data.frame(qu3)
qu4 <- data.matrix(qu3)
# paup-paup
ppqu <- qu4[1:100, 1:100]
ppqu <- as.matrix(ppqu)
ppqu <- as.vector(ppqu)
ppququartiles <- quantile(ppqu)
ppqumedian <- ppququartiles[3]
# paup-morphy
pmqu <- qu4[1:100, 101:200]
pmqu <- as.matrix(pmqu)
pmqu <- as.vector(pmqu)
pmququartiles <- quantile(pmqu)
# paup-anagallis
paqu <- qu4[1:100, 201:260]
paqu <- as.matrix(paqu)
paqu <- as.vector(paqu)
paququartiles <- quantile(paqu)
# morphy-anagallis
maqu <- qu4[101:200, 201:260]
maqu <- as.matrix(maqu)
maqu <- as.vector(maqu)
maququartiles <- quantile(maqu)
# median and quartiles
qulist <- list(pmqu, paqu, maqu)
ququartiles <- as.data.frame(sapply(qulist, quantile, na.rm = T))
colnames(ququartiles) <- c("PAUP* vs Morphy", "PAUP* vs Anagallis", "Morphy vs Anagallis")
qumedian <- ququartiles[3,]
quLQ <- ququartiles[2,]
quUQ <- ququartiles[4,]
### normalise
random.Q.quantile <- function(number.tips, number.trees, difference.function) {
trees1 <- rmtree(number.trees, number.tips, br = NULL, rooted = F)
trees2 <- rmtree(number.trees, number.tips, br = NULL, rooted = F)
result <- mapply(difference.function, trees1, trees2, SIMPLIFY = F)
result <- bind_rows(result)
result <- sapply(result, quantile)
return(result)
}
set.seed(12345)
randoQquantile <- random.Q.quantile(Ntip(paup), 100, QuartetPoints)
randoQquantile <- randoQquantile[,2]
randoQmedian <- randoQquantile[3]
randoQLQ <- randoQquantile[2]
randoQUQ <- randoQquantile[4]
normalisedQmedian <- qumedian/randoQmedian
normalisedQLQ <- quLQ/randoQLQ
normalisedQUQ <- quUQ/randoQUQ
##### Visualisation #####
palette <- wesanderson::wes_palette(name = "Chevalier1")
palette <- c(palette, "#25291C", "#E6E49F")
# PAUP* = palette[1]
# Morphy = palette[2]
# Anagallis = palette[3]
# PAUP* vs Morphy = palette[4]
# PAUP* vs Anagallis = palette[5]
# Morphy vs Anagallis = palette[6]
comparepalette <- c(palette[6], palette[5], palette[4])
#### MDS ####
library(vegan)
library(cowplot)
# programme column
paupnames <- c("PAUP*")
paupnames <- rep(paupnames, length(pauptrees))
morphynames <- c("Morphy")
morphynames <- rep(morphynames, length(morphytrees))
ananames <- c("Anagallis")
ananames <- rep(ananames, length(anatrees))
Programme <- c(paupnames, morphynames, ananames)
### RF
mdsrf <- metaMDS(rf, distance = "euclidean", trymax = 999)
stressplot(mdsrf)
mdsrfpoints <- as.data.frame(mdsrf$points)
mdsrfpoints <- cbind(mdsrfpoints, Programme)
jitter <- position_jitter(width = 0.6, height = 0.6)
# Scatter plot with marginal density distribution plot
mdsrfplot1 <- ggplot(mdsrfpoints) +
geom_point(aes(MDS1, MDS2, colour = Programme), position = "jitter", size = 2.5, alpha = 1) +
theme_pubr() +
theme(axis.line = element_blank(), axis.ticks = element_blank(), axis.title = element_blank(),
axis.text = element_blank(), legend.position = "none", panel.border = element_rect(colour = "grey", size = 0.5, fill = NA)) +
color_palette(palette = c(palette[3], palette[2], palette[1]))
mdsrfplot2 <- ggplot(mdsrfpoints) +
geom_density(aes(MDS1, fill = Programme), alpha = 0.4) +
theme_pubr() +
theme(axis.title = element_text(size = 11)) +
fill_palette(palette = c(palette[3], palette[2], palette[1])) +
scale_y_continuous(breaks = c(0, 1.5))
mdsrfplot3 <- ggplot(mdsrfpoints) +
geom_density(aes(y = MDS2, fill = Programme), alpha = 0.4) +
theme_pubr() +
theme(legend.position = "none", axis.title = element_text(size = 11)) +
fill_palette(palette = c(palette[3], palette[2], palette[1])) +
scale_x_continuous(breaks = c(0, 1.2))
blankPlot <- ggplot()+geom_blank(aes(1,1))+
theme(plot.background = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_blank(),
panel.background = element_blank(),
axis.title.x = element_blank(),
axis.title.y = element_blank(),
axis.text.x = element_blank(),
axis.text.y = element_blank(),
axis.ticks = element_blank())
pdf("Figures/RF MDS with density distribution A2019.pdf", 8, 5.3)
ggdraw() +
draw_plot(mdsrfplot2, x = 0, y = 0.7, width = 0.7, height = 0.3) +
draw_plot(mdsrfplot1, x = 0, y = 0, width = 0.7, height = 0.7) +
draw_plot(mdsrfplot3, x = 0.7, y = 0, width = 0.3, height = 0.7) +
draw_plot_label(label = "A", x = 0, y = 0.98) +
draw_plot_label(label = "B", x = 0, y = 0.74) +
draw_plot_label(label = "C", x = 0.7, y = 0.74)
dev.off()
### Quartet
mdsqu <- metaMDS(qu4, distance = "euclidean", trymax = 999)
stressplot(mdsqu)
mdsqupoints <- as.data.frame(mdsqu$points)
mdsqupoints <- cbind(mdsqupoints, Programme)
jitter <- position_jitter(width = 0.6, height = 0.6)
# Scatter plot with marginal density distribution plot
mdsquplot1 <- ggplot(mdsqupoints) +
geom_point(aes(MDS1, MDS2, colour = Programme), position = "jitter", size = 2.5, alpha = 1) +
theme_pubr() +
theme(axis.line = element_blank(), axis.ticks = element_blank(), axis.title = element_blank(),
axis.text = element_blank(), legend.position = "none", panel.border = element_rect(colour = "grey", size = 0.5, fill = NA)) +
color_palette(palette = c(palette[3], palette[2], palette[1]))
mdsquplot2 <- ggplot(mdsqupoints) +
geom_density(aes(MDS1, fill = Programme), alpha = 0.4) +
theme_pubr() +
theme(axis.title = element_text(size = 11)) +
fill_palette(palette = c(palette[3], palette[2], palette[1])) +
scale_y_continuous(breaks = c(0, 0.003))
mdsquplot3 <- ggplot(mdsqupoints) +
geom_density(aes(y = MDS2, fill = Programme), alpha = 0.4) +
theme_pubr() +
theme(legend.position = "none", axis.title = element_text(size = 11)) +
fill_palette(palette = c(palette[3], palette[2], palette[1])) +
scale_x_continuous(breaks = c(0,0.003))
blankPlot <- ggplot()+geom_blank(aes(1,1))+
theme(plot.background = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_blank(),
panel.background = element_blank(),
axis.title.x = element_blank(),
axis.title.y = element_blank(),
axis.text.x = element_blank(),
axis.text.y = element_blank(),
axis.ticks = element_blank())
pdf("Figures/Quartet MDS with density distribution A2019.pdf", 8, 5.3)
ggdraw() +
draw_plot(mdsquplot2, x = 0, y = 0.7, width = 0.7, height = 0.3) +
draw_plot(mdsquplot1, x = 0, y = 0, width = 0.7, height = 0.7) +
draw_plot(mdsquplot3, x = 0.7, y = 0, width = 0.3, height = 0.7) +
draw_plot_label(label = "A", x = 0, y = 0.98) +
draw_plot_label(label = "B", x = 0, y = 0.74) +
draw_plot_label(label = "C", x = 0.7, y = 0.74)
dev.off()
mdsrfplot3 <- ggplot(mdsrfpoints) +
geom_density(aes(y = MDS2, fill = Programme), alpha = 0.4) +
theme_pubr() +
theme(legend.position = "none", axis.title = element_text(size = 11)) +
fill_palette(palette = c(palette[3], palette[2], palette[1]))
blankPlot <- ggplot()+geom_blank(aes(1,1))+
theme(plot.background = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_blank(),
panel.background = element_blank(),
axis.title.x = element_blank(),
axis.title.y = element_blank(),
axis.text.x = element_blank(),
axis.text.y = element_blank(),
axis.ticks = element_blank())
pdf("Figures/RF MDS with density distribution A2019.pdf", 8, 5.3)
ggdraw() +
draw_plot(mdsrfplot2, x = 0, y = 0.7, width = 0.7, height = 0.3) +
draw_plot(mdsrfplot1, x = 0, y = 0, width = 0.7, height = 0.7) +
draw_plot(mdsrfplot3, x = 0.7, y = 0, width = 0.3, height = 0.7) +
draw_plot_label(label = "A", x = 0, y = 0.98) +
draw_plot_label(label = "B", x = 0, y = 0.74) +
draw_plot_label(label = "C", x = 0.7, y = 0.74)
dev.off()
mdsrfplot3 <- ggplot(mdsrfpoints) +
geom_density(aes(y = MDS2, fill = Programme), alpha = 0.4) +
theme_pubr() +
theme(legend.position = "none", axis.title = element_text(size = 11)) +
fill_palette(palette = c(palette[3], palette[2], palette[1])) +
scale_x_continuous(breaks = c(0, 1))
blankPlot <- ggplot()+geom_blank(aes(1,1))+
theme(plot.background = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_blank(),
panel.background = element_blank(),
axis.title.x = element_blank(),
axis.title.y = element_blank(),
axis.text.x = element_blank(),
axis.text.y = element_blank(),
axis.ticks = element_blank())
pdf("Figures/RF MDS with density distribution A2019.pdf", 8, 5.3)
ggdraw() +
draw_plot(mdsrfplot2, x = 0, y = 0.7, width = 0.7, height = 0.3) +
draw_plot(mdsrfplot1, x = 0, y = 0, width = 0.7, height = 0.7) +
draw_plot(mdsrfplot3, x = 0.7, y = 0, width = 0.3, height = 0.7) +
draw_plot_label(label = "A", x = 0, y = 0.98) +
draw_plot_label(label = "B", x = 0, y = 0.74) +
draw_plot_label(label = "C", x = 0.7, y = 0.74)
dev.off()
##### Asher & Hofreiter, 2006 #####
setwd("~/Documents/Imperial/Morphological Character Hierarchies/Data/Asher & Hofreiter, 2006")
library(ape)
library(distory)
library(phangorn)
library(phytools)
library(paleotree)
library(dplyr)
library(Quartet)
library(dispRity)
library(rlist)
library(ggpubr)
# paup
pauptrees <- read.nexus("Paup-A&H2006.tre")
paup <- consensus(pauptrees)
paup <- unroot(paup)
pauptrees <- as.multiPhylo(pauptrees)
pauptrees <- unroot.multiPhylo(pauptrees)
# morphy
morphytrees <- read.nexus("Morphy-A&H2006.tre")
morphy <- consensus(morphytrees)
morphy <- unroot(morphy)
morphytrees <- as.multiPhylo(morphytrees)
morphytrees <- unroot.multiPhylo(morphytrees)
# anagallis
anatrees <- read.nexus("Anatrees-A&H2006.txt.nex")
ana <- consensus(anatrees)
ana <- unroot(ana)
anatrees <- list.filter(anatrees, Nnode == 22)
anatrees <- as.multiPhylo(anatrees)
anatrees <- unroot.multiPhylo(anatrees)
contreelist <- c(paup, morphy, ana)
treeslist <- c(pauptrees, morphytrees, anatrees)
#### RF ####
rf <- sapply(treeslist, function(x)
sapply(treeslist, RF.dist, tree1=x))
colnames(rf) <- rownames(rf) <- c(paste("Paup", 1:length(pauptrees), sep = ""),
paste("Morphy", 1:length(morphytrees), sep = ""),
paste("Anagallis", 1:length(anatrees), sep = ""))
rf <- as.data.frame(rf)
# paup-paup
pprf <- rf[1:17, 1:17]
pprf <- as.matrix(pprf)
pprf <- as.vector(pprf)
pprfquartiles <- quantile(pprf)
pprfmedian <- pprfquartiles[3]
# paup morphy
pmrf <- rf[1:17, 18]
pmrf <- as.matrix(pmrf)
pmrf <- as.vector(pmrf)
# paup anagallis
parf <- rf[1:17, 19:183]
parf <- as.matrix(parf)
parf <- as.vector(parf)
# morphy anagallis
marf <- rf[18, 19:183]
marf <- as.matrix(marf)
marf <- as.vector(marf)
# median
rflist <- list(pmrf, parf, marf)
rfquartiles <- as.data.frame(sapply(rflist, quantile, na.rm = T))
colnames(rfquartiles) <- c("PAUP* vs Morphy", "PAUP* vs Anagallis", "Morphy vs Anagallis")
rfmedian <- rfquartiles[3,]
rfLQ <- rfquartiles[2,]
rfUQ <- rfquartiles[4,]
### normalise
random.comparisons.quantile <- function(number.tips, number.trees, difference.function) {
trees1 <- rmtree(number.trees, number.tips, br = NULL, rooted = F)
trees2 <- rmtree(number.trees, number.tips, br = NULL, rooted = F)
result <- quantile(unlist(mapply(difference.function, trees1, trees2, SIMPLIFY = F)))
return(result)
}
set.seed(12345)
randoRFquantile <- random.comparisons.quantile(Ntip(paup), 100, RF.dist)
randoRFmedian <- randoRFquantile[3]
randoRFLQ <- randoRFquantile[2]
randoRFUQ <- randoRFquantile[4]
normalisedRFmedian <- rfmedian/randoRFmedian
normalisedRFLQ <- rfLQ/randoRFLQ
normalisedRFUQ <- rfUQ/randoRFUQ
#### Quartet ####
qu <- sapply(treeslist, function(x)
sapply(treeslist, QuartetPoints, cf=x))
qu1 <- as.data.frame(qu)
quartets <- c("Unresolved", "Contradicted", "Consistent")
quartets <- rep(quartets, length(qu1))
qu2 <- cbind(quartets, qu1)
qu3 <- subset(qu2, quartets == "Contradicted")
qu3 <- qu3[,2:ncol(qu3)]
colnames(qu3) <- rownames(qu3) <- c(paste("Paup", 1:length(pauptrees), sep = ""),
paste("Morphy", 1:length(morphytrees), sep = ""),
paste("Anagallis", 1:length(anatrees), sep = ""))
qu3 <- as.data.frame(qu3)
qu4 <- data.matrix(qu3)
# paup-paup
ppqu <- qu4[1:17, 1:17]
ppqu <- as.matrix(ppqu)
ppqu <- as.vector(ppqu)
ppququartiles <- quantile(ppqu)
ppqumedian <- ppququartiles[3]
# paup-morphy
pmqu <- qu4[1:17, 18]
pmqu <- as.matrix(pmqu)
pmqu <- as.vector(pmqu)
pmququartiles <- quantile(pmqu)
# paup-anagallis
paqu <- qu4[1:17, 19:183]
paqu <- as.matrix(paqu)
paqu <- as.vector(paqu)
paququartiles <- quantile(paqu)
# morphy-anagallis
maqu <- qu4[18, 19:183]
maqu <- as.matrix(maqu)
maqu <- as.vector(maqu)
maququartiles <- quantile(maqu)
# median and quartiles
qulist <- list(pmqu, paqu, maqu)
ququartiles <- as.data.frame(sapply(qulist, quantile, na.rm = T))
colnames(ququartiles) <- c("PAUP* vs Morphy", "PAUP* vs Anagallis", "Morphy vs Anagallis")
qumedian <- ququartiles[3,]
quLQ <- ququartiles[2,]
quUQ <- ququartiles[4,]
### normalise
random.Q.quantile <- function(number.tips, number.trees, difference.function) {
trees1 <- rmtree(number.trees, number.tips, br = NULL, rooted = F)
trees2 <- rmtree(number.trees, number.tips, br = NULL, rooted = F)
result <- mapply(difference.function, trees1, trees2, SIMPLIFY = F)
result <- bind_rows(result)
result <- sapply(result, quantile)
return(result)
}
set.seed(12345)
randoQquantile <- random.Q.quantile(Ntip(paup), 100, QuartetPoints)
randoQquantile <- randoQquantile[,2]
randoQmedian <- randoQquantile[3]
randoQLQ <- randoQquantile[2]
randoQUQ <- randoQquantile[4]
normalisedQmedian <- qumedian/randoQmedian
normalisedQLQ <- quLQ/randoQLQ
normalisedQUQ <- quUQ/randoQUQ
##### Visualisation #####
palette <- wesanderson::wes_palette(name = "Chevalier1")
palette <- c(palette, "#25291C", "#E6E49F")
# PAUP* = palette[1]
# Morphy = palette[2]
# Anagallis = palette[3]
# PAUP* vs Morphy = palette[4]
# PAUP* vs Anagallis = palette[5]
# Morphy vs Anagallis = palette[6]
comparepalette <- c(palette[6], palette[5], palette[4])
#### MDS ####
library(vegan)
library(cowplot)
# programme column
paupnames <- c("PAUP*")
paupnames <- rep(paupnames, length(pauptrees))
morphynames <- c("Morphy")
morphynames <- rep(morphynames, length(morphytrees))
ananames <- c("Anagallis")
ananames <- rep(ananames, length(anatrees))
Programme <- c(paupnames, morphynames, ananames)
### RF
mdsrf <- metaMDS(rf, distance = "euclidean", trymax = 999)
stressplot(mdsrf)
mdsrfpoints <- as.data.frame(mdsrf$points)
mdsrfpoints <- cbind(mdsrfpoints, Programme)
jitter <- position_jitter(width = 0.6, height = 0.6)
# Scatter plot with marginal density distribution plot
mdsrfplot1 <- ggplot(mdsrfpoints) +
geom_point(aes(MDS1, MDS2, colour = Programme), position = "jitter", size = 2.5, alpha = 1) +
theme_pubr() +
theme(axis.line = element_blank(), axis.ticks = element_blank(), axis.title = element_blank(),
axis.text = element_blank(), legend.position = "none", panel.border = element_rect(colour = "grey", size = 0.5, fill = NA)) +
color_palette(palette = c(palette[3], palette[2], palette[1]))
mdsrfplot2 <- ggplot(mdsrfpoints) +
geom_density(aes(MDS1, fill = Programme), alpha = 0.4) +
theme_pubr() +
theme(axis.title = element_text(size = 11)) +
fill_palette(palette = c(palette[3], palette[2], palette[1])) +
scale_y_continuous(breaks = c(0,0.06))
mdsrfplot3 <- ggplot(mdsrfpoints) +
geom_density(aes(y = MDS2, fill = Programme), alpha = 0.4) +
theme_pubr() +
theme(legend.position = "none", axis.title = element_text(size = 11)) +
fill_palette(palette = c(palette[3], palette[2], palette[1]))
blankPlot <- ggplot()+geom_blank(aes(1,1))+
theme(plot.background = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_blank(),
panel.background = element_blank(),
axis.title.x = element_blank(),
axis.title.y = element_blank(),
axis.text.x = element_blank(),
axis.text.y = element_blank(),
axis.ticks = element_blank())
pdf("Figures/RF MDS with density distribution AH2006.pdf", 8, 5.3)
ggdraw() +
draw_plot(mdsrfplot2, x = 0, y = 0.7, width = 0.7, height = 0.3) +
draw_plot(mdsrfplot1, x = 0, y = 0, width = 0.7, height = 0.7) +
draw_plot(mdsrfplot3, x = 0.7, y = 0, width = 0.3, height = 0.7) +
draw_plot_label(label = "A", x = 0, y = 0.98) +
draw_plot_label(label = "B", x = 0, y = 0.74) +
draw_plot_label(label = "C", x = 0.7, y = 0.74)
dev.off()
### Quartet
mdsqu <- metaMDS(qu4, distance = "euclidean", trymax = 999)
stressplot(mdsqu)
mdsqupoints <- as.data.frame(mdsqu$points)
mdsqupoints <- cbind(mdsqupoints, Programme)
jitter <- position_jitter(width = 0.6, height = 0.6)
# Scatter plot with marginal density distribution plot
mdsquplot1 <- ggplot(mdsqupoints) +
geom_point(aes(MDS1, MDS2, colour = Programme), position = "jitter", size = 2.5, alpha = 1) +
theme_pubr() +
theme(axis.line = element_blank(), axis.ticks = element_blank(), axis.title = element_blank(),
axis.text = element_blank(), legend.position = "none", panel.border = element_rect(colour = "grey", size = 0.5, fill = NA)) +
color_palette(palette = c(palette[3], palette[2], palette[1]))
mdsquplot2 <- ggplot(mdsqupoints) +
geom_density(aes(MDS1, fill = Programme), alpha = 0.4) +
theme_pubr() +
theme(axis.title = element_text(size = 11)) +
fill_palette(palette = c(palette[3], palette[2], palette[1])) +
scale_y_continuous(breaks = c(0, 0.0005))
mdsquplot3 <- ggplot(mdsqupoints) +
geom_density(aes(y = MDS2, fill = Programme), alpha = 0.4) +
theme_pubr() +
theme(legend.position = "none", axis.title = element_text(size = 11)) +
fill_palette(palette = c(palette[3], palette[2], palette[1]))
blankPlot <- ggplot()+geom_blank(aes(1,1))+
theme(plot.background = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_blank(),
panel.background = element_blank(),
axis.title.x = element_blank(),
axis.title.y = element_blank(),
axis.text.x = element_blank(),
axis.text.y = element_blank(),
axis.ticks = element_blank())
pdf("Figures/Quartet MDS with density distribution AH2006.pdf", 8, 5.3)
ggdraw() +
draw_plot(mdsquplot2, x = 0, y = 0.7, width = 0.7, height = 0.3) +
draw_plot(mdsquplot1, x = 0, y = 0, width = 0.7, height = 0.7) +
draw_plot(mdsquplot3, x = 0.7, y = 0, width = 0.3, height = 0.7) +
draw_plot_label(label = "A", x = 0, y = 0.98) +
draw_plot_label(label = "B", x = 0, y = 0.74) +
draw_plot_label(label = "C", x = 0.7, y = 0.74)
dev.off()
